<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>echarts5图表渲染过程分析</title>
      <link href="/2021/11/10/echarts5-tu-biao-xuan-ran-guo-cheng-fen-xi/"/>
      <url>/2021/11/10/echarts5-tu-biao-xuan-ran-guo-cheng-fen-xi/</url>
      
        <content type="html"><![CDATA[<h3 id="Echarts快速入门"><a href="#Echarts快速入门" class="headerlink" title="Echarts快速入门"></a>Echarts快速入门</h3><p>Echarts就不做过多介绍了，相信大家都听说或者使用过，现在以官方给的第一个快速入门为基础，分析一下渲染过程。示例代码如下</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"main"</span> style<span class="token operator">=</span><span class="token string">"width: 600px;height:400px;"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">></span>    <span class="token comment">// 基于准备好的dom，初始化echarts实例</span>    <span class="token keyword">var</span> myChart <span class="token operator">=</span> echarts<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'main'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 指定图表的配置项和数据</span>    <span class="token keyword">var</span> option <span class="token operator">=</span> <span class="token punctuation">&#123;</span>      title<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        text<span class="token operator">:</span> <span class="token string">'ECharts 入门示例'</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      tooltip<span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      legend<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        data<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'销量'</span><span class="token punctuation">]</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      xAxis<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        data<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'衬衫'</span><span class="token punctuation">,</span> <span class="token string">'羊毛衫'</span><span class="token punctuation">,</span> <span class="token string">'雪纺衫'</span><span class="token punctuation">,</span> <span class="token string">'裤子'</span><span class="token punctuation">,</span> <span class="token string">'高跟鞋'</span><span class="token punctuation">,</span> <span class="token string">'袜子'</span><span class="token punctuation">]</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      yAxis<span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      series<span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">&#123;</span>          name<span class="token operator">:</span> <span class="token string">'销量'</span><span class="token punctuation">,</span>          type<span class="token operator">:</span> <span class="token string">'bar'</span><span class="token punctuation">,</span>          data<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">36</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">]</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token comment">// 使用刚指定的配置项和数据显示图表。</span>    myChart<span class="token punctuation">.</span><span class="token function">setOption</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>渲染出来的效果就是这样的<br><img src="https://cdn.jsdelivr.net/gh/wangdengwu/imagehosting/20211112181806.png"></p><h3 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h3><p>echarts是依赖zrender来绘制的，上述代码可以看到调用了echarts的2个方法，<strong>init</strong>和<strong>setOption</strong>,5.x版本的echarts是使用typescript写的。<br>先看下init方法的定义,在src/echarts.ts里,为了更简洁清晰，后续代码我删掉了非主干流程渲染的部分内容。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> init <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'./core/echarts'</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>    <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token function">init</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>真正的init方法其实是./core/echarts里的</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">init</span><span class="token punctuation">(</span>    <span class="token parameter">dom<span class="token operator">:</span> HTMLElement<span class="token punctuation">,</span>    theme<span class="token operator">?</span><span class="token operator">:</span> string <span class="token operator">|</span> object<span class="token punctuation">,</span>    opts<span class="token operator">?</span><span class="token operator">:</span> EChartsInitOpts</span><span class="token punctuation">)</span><span class="token operator">:</span> EChartsType <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> existInstance <span class="token operator">=</span> <span class="token function">getInstanceByDom</span><span class="token punctuation">(</span>dom<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>existInstance<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         <span class="token keyword">return</span> existInstance<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">const</span> chart <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ECharts</span><span class="token punctuation">(</span>dom<span class="token punctuation">,</span> theme<span class="token punctuation">,</span> opts<span class="token punctuation">)</span><span class="token punctuation">;</span>    chart<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token string">'ec_'</span> <span class="token operator">+</span> idBase<span class="token operator">++</span><span class="token punctuation">;</span>    instances<span class="token punctuation">[</span>chart<span class="token punctuation">.</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> chart<span class="token punctuation">;</span>    modelUtil<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>dom<span class="token punctuation">,</span> <span class="token constant">DOM_ATTRIBUTE_KEY</span><span class="token punctuation">,</span> chart<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">enableConnect</span><span class="token punctuation">(</span>chart<span class="token punctuation">)</span><span class="token punctuation">;</span>    lifecycle<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">'afterinit'</span><span class="token punctuation">,</span> chart<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> chart<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>代码实例化了ECharts对象，构造函数代码</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">class</span> <span class="token class-name">ECharts</span> <span class="token keyword">extends</span> <span class="token class-name">Eventful</span><span class="token operator">&lt;</span>ECEventDefinition<span class="token operator">></span> <span class="token punctuation">&#123;</span> <span class="token function">constructor</span><span class="token punctuation">(</span>        dom<span class="token operator">:</span> HTMLElement<span class="token punctuation">,</span>        <span class="token comment">// Theme name or themeOption.</span>        theme<span class="token operator">?</span><span class="token operator">:</span> string <span class="token operator">|</span> ThemeOption<span class="token punctuation">,</span>        opts<span class="token operator">?</span><span class="token operator">:</span> EChartsInitOpts    <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ECEventProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        opts <span class="token operator">=</span> opts <span class="token operator">||</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token comment">// Get theme by name</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> theme <span class="token operator">===</span> <span class="token string">'string'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            theme <span class="token operator">=</span> themeStorage<span class="token punctuation">[</span>theme<span class="token punctuation">]</span> <span class="token keyword">as</span> object<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>_dom <span class="token operator">=</span> dom<span class="token punctuation">;</span>        <span class="token keyword">let</span> defaultRenderer <span class="token operator">=</span> <span class="token string">'canvas'</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> defaultUseDirtyRect <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                <span class="token keyword">const</span> zr <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_zr <span class="token operator">=</span> zrender<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>dom<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>            renderer<span class="token operator">:</span> opts<span class="token punctuation">.</span>renderer <span class="token operator">||</span> defaultRenderer<span class="token punctuation">,</span>            devicePixelRatio<span class="token operator">:</span> opts<span class="token punctuation">.</span>devicePixelRatio<span class="token punctuation">,</span>            width<span class="token operator">:</span> opts<span class="token punctuation">.</span>width<span class="token punctuation">,</span>            height<span class="token operator">:</span> opts<span class="token punctuation">.</span>height<span class="token punctuation">,</span>            useDirtyRect<span class="token operator">:</span> opts<span class="token punctuation">.</span>useDirtyRect <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> defaultUseDirtyRect <span class="token operator">:</span> opts<span class="token punctuation">.</span>useDirtyRect        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// Expect 60 fps.</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>_throttledZrFlush <span class="token operator">=</span> <span class="token function">throttle</span><span class="token punctuation">(</span><span class="token function">bind</span><span class="token punctuation">(</span>zr<span class="token punctuation">.</span>flush<span class="token punctuation">,</span> zr<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        theme <span class="token operator">=</span> <span class="token function">clone</span><span class="token punctuation">(</span>theme<span class="token punctuation">)</span><span class="token punctuation">;</span>        theme <span class="token operator">&amp;&amp;</span> <span class="token function">backwardCompat</span><span class="token punctuation">(</span>theme <span class="token keyword">as</span> ECUnitOption<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>_theme <span class="token operator">=</span> theme<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>_locale <span class="token operator">=</span> <span class="token function">createLocaleObject</span><span class="token punctuation">(</span>opts<span class="token punctuation">.</span>locale <span class="token operator">||</span> <span class="token constant">SYSTEM_LANG</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>_coordSysMgr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CoordinateSystemManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> api <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_api <span class="token operator">=</span> <span class="token function">createExtensionAPI</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// Sort on demand</span>        <span class="token keyword">function</span> <span class="token function">prioritySortFunc</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token operator">:</span> StageHandlerInternal<span class="token punctuation">,</span> b<span class="token operator">:</span> StageHandlerInternal</span><span class="token punctuation">)</span><span class="token operator">:</span> number <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> a<span class="token punctuation">.</span>__prio <span class="token operator">-</span> b<span class="token punctuation">.</span>__prio<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token function">timsort</span><span class="token punctuation">(</span>visualFuncs<span class="token punctuation">,</span> prioritySortFunc<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">timsort</span><span class="token punctuation">(</span>dataProcessorFuncs<span class="token punctuation">,</span> prioritySortFunc<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>_scheduler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scheduler</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> api<span class="token punctuation">,</span> dataProcessorFuncs<span class="token punctuation">,</span> visualFuncs<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>_messageCenter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MessageCenter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// Init mouse events</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_initEvents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// In case some people write `window.onresize = chart.resize`</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>resize <span class="token operator">=</span> <span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>resize<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        zr<span class="token punctuation">.</span>animation<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'frame'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_onframe<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">bindRenderedEvent</span><span class="token punctuation">(</span>zr<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">bindMouseEvent</span><span class="token punctuation">(</span>zr<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// ECharts instance can be used as value.</span>        <span class="token function">setAsPrimitive</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>内容比较多，重点代码是初始化了zrender</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> zr <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_zr <span class="token operator">=</span> zrender<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>dom<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>            renderer<span class="token operator">:</span> opts<span class="token punctuation">.</span>renderer <span class="token operator">||</span> defaultRenderer<span class="token punctuation">,</span>            devicePixelRatio<span class="token operator">:</span> opts<span class="token punctuation">.</span>devicePixelRatio<span class="token punctuation">,</span>            width<span class="token operator">:</span> opts<span class="token punctuation">.</span>width<span class="token punctuation">,</span>            height<span class="token operator">:</span> opts<span class="token punctuation">.</span>height<span class="token punctuation">,</span>            useDirtyRect<span class="token operator">:</span> opts<span class="token punctuation">.</span>useDirtyRect <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> defaultUseDirtyRect <span class="token operator">:</span> opts<span class="token punctuation">.</span>useDirtyRect <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>初始化了<code>this._scheduler = new Scheduler(this, api, dataProcessorFuncs, visualFuncs);</code>,后续series渲染的时候会用到。<br>同时注册了渲染回调<code>zr.animation.on(&#39;frame&#39;, this._onframe, this);</code></p><p>在分析setOption方法之前，有必要先说一下echarts的组件设计思想，我们示例里看到的绘制出来的图形，其实是很多组件构成的，echarts主要分成2类，一类是ComponentView，一类是ChartView。分别在src/chart下面和src/component下面。<br>先看下父类ComponentView(src/view/Component.ts)定义</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">class</span> <span class="token class-name">ComponentView</span> <span class="token punctuation">&#123;</span>    readonly group<span class="token operator">:</span> ViewRootGroup<span class="token punctuation">;</span>    readonly uid<span class="token operator">:</span> string<span class="token punctuation">;</span>    __model<span class="token operator">:</span> ComponentModel<span class="token punctuation">;</span>    __alive<span class="token operator">:</span> boolean<span class="token punctuation">;</span>    __id<span class="token operator">:</span> string<span class="token punctuation">;</span>    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>group <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Group</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>uid <span class="token operator">=</span> componentUtil<span class="token punctuation">.</span><span class="token function">getUID</span><span class="token punctuation">(</span><span class="token string">'viewComponent'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">init</span><span class="token punctuation">(</span>ecModel<span class="token operator">:</span> GlobalModel<span class="token punctuation">,</span> api<span class="token operator">:</span> ExtensionAPI<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token function">render</span><span class="token punctuation">(</span>model<span class="token operator">:</span> ComponentModel<span class="token punctuation">,</span> ecModel<span class="token operator">:</span> GlobalModel<span class="token punctuation">,</span> api<span class="token operator">:</span> ExtensionAPI<span class="token punctuation">,</span> payload<span class="token operator">:</span> Payload<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token function">dispose</span><span class="token punctuation">(</span>ecModel<span class="token operator">:</span> GlobalModel<span class="token punctuation">,</span> api<span class="token operator">:</span> ExtensionAPI<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token function">updateView</span><span class="token punctuation">(</span>model<span class="token operator">:</span> ComponentModel<span class="token punctuation">,</span> ecModel<span class="token operator">:</span> GlobalModel<span class="token punctuation">,</span> api<span class="token operator">:</span> ExtensionAPI<span class="token punctuation">,</span> payload<span class="token operator">:</span> Payload<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// Do nothing;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">updateLayout</span><span class="token punctuation">(</span>model<span class="token operator">:</span> ComponentModel<span class="token punctuation">,</span> ecModel<span class="token operator">:</span> GlobalModel<span class="token punctuation">,</span> api<span class="token operator">:</span> ExtensionAPI<span class="token punctuation">,</span> payload<span class="token operator">:</span> Payload<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// Do nothing;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">updateVisual</span><span class="token punctuation">(</span>model<span class="token operator">:</span> ComponentModel<span class="token punctuation">,</span> ecModel<span class="token operator">:</span> GlobalModel<span class="token punctuation">,</span> api<span class="token operator">:</span> ExtensionAPI<span class="token punctuation">,</span> payload<span class="token operator">:</span> Payload<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// Do nothing;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * Hook for blur target series.     * Can be used in marker for blur the markers     */</span>    <span class="token function">blurSeries</span><span class="token punctuation">(</span>seriesModels<span class="token operator">:</span> SeriesModel<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> ecModel<span class="token operator">:</span> GlobalModel<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">&#123;</span>         <span class="token comment">// Do nothing;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">static</span> registerClass<span class="token operator">:</span> clazzUtil<span class="token punctuation">.</span>ClassManager<span class="token punctuation">[</span><span class="token string">'registerClass'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最主要的2个方法init和render是由各个组件子类来实现的。<br>ChartView(src/view/Chart.ts)</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">class</span> <span class="token class-name">ChartView</span> <span class="token punctuation">&#123;</span>    type<span class="token operator">:</span> string<span class="token punctuation">;</span>    readonly group<span class="token operator">:</span> ViewRootGroup<span class="token punctuation">;</span>    readonly uid<span class="token operator">:</span> string<span class="token punctuation">;</span>    readonly renderTask<span class="token operator">:</span> SeriesTask<span class="token punctuation">;</span>    ignoreLabelLineUpdate<span class="token operator">:</span> boolean<span class="token punctuation">;</span>    __alive<span class="token operator">:</span> boolean<span class="token punctuation">;</span>    __model<span class="token operator">:</span> SeriesModel<span class="token punctuation">;</span>    __id<span class="token operator">:</span> string<span class="token punctuation">;</span>    <span class="token keyword">static</span> protoInitialize <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> proto <span class="token operator">=</span> <span class="token class-name">ChartView</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>        proto<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">'chart'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>group <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Group</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>uid <span class="token operator">=</span> componentUtil<span class="token punctuation">.</span><span class="token function">getUID</span><span class="token punctuation">(</span><span class="token string">'viewChart'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>renderTask <span class="token operator">=</span> createTask<span class="token operator">&lt;</span>SeriesTaskContext<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            plan<span class="token operator">:</span> renderTaskPlan<span class="token punctuation">,</span>            reset<span class="token operator">:</span> renderTaskReset        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>renderTask<span class="token punctuation">.</span>context <span class="token operator">=</span> <span class="token punctuation">&#123;</span>view<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">&#125;</span> <span class="token keyword">as</span> SeriesTaskContext<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">init</span><span class="token punctuation">(</span>ecModel<span class="token operator">:</span> GlobalModel<span class="token punctuation">,</span> api<span class="token operator">:</span> ExtensionAPI<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token function">render</span><span class="token punctuation">(</span>seriesModel<span class="token operator">:</span> SeriesModel<span class="token punctuation">,</span> ecModel<span class="token operator">:</span> GlobalModel<span class="token punctuation">,</span> api<span class="token operator">:</span> ExtensionAPI<span class="token punctuation">,</span> payload<span class="token operator">:</span> Payload<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token function">highlight</span><span class="token punctuation">(</span>seriesModel<span class="token operator">:</span> SeriesModel<span class="token punctuation">,</span> ecModel<span class="token operator">:</span> GlobalModel<span class="token punctuation">,</span> api<span class="token operator">:</span> ExtensionAPI<span class="token punctuation">,</span> payload<span class="token operator">:</span> Payload<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">&#123;</span>        <span class="token function">toggleHighlight</span><span class="token punctuation">(</span>seriesModel<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> payload<span class="token punctuation">,</span> <span class="token string">'emphasis'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">downplay</span><span class="token punctuation">(</span>seriesModel<span class="token operator">:</span> SeriesModel<span class="token punctuation">,</span> ecModel<span class="token operator">:</span> GlobalModel<span class="token punctuation">,</span> api<span class="token operator">:</span> ExtensionAPI<span class="token punctuation">,</span> payload<span class="token operator">:</span> Payload<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">&#123;</span>        <span class="token function">toggleHighlight</span><span class="token punctuation">(</span>seriesModel<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> payload<span class="token punctuation">,</span> <span class="token string">'normal'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">remove</span><span class="token punctuation">(</span>ecModel<span class="token operator">:</span> GlobalModel<span class="token punctuation">,</span> api<span class="token operator">:</span> ExtensionAPI<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>group<span class="token punctuation">.</span><span class="token function">removeAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">dispose</span><span class="token punctuation">(</span>ecModel<span class="token operator">:</span> GlobalModel<span class="token punctuation">,</span> api<span class="token operator">:</span> ExtensionAPI<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token function">updateView</span><span class="token punctuation">(</span>seriesModel<span class="token operator">:</span> SeriesModel<span class="token punctuation">,</span> ecModel<span class="token operator">:</span> GlobalModel<span class="token punctuation">,</span> api<span class="token operator">:</span> ExtensionAPI<span class="token punctuation">,</span> payload<span class="token operator">:</span> Payload<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>seriesModel<span class="token punctuation">,</span> ecModel<span class="token punctuation">,</span> api<span class="token punctuation">,</span> payload<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// FIXME never used?</span>    <span class="token function">updateLayout</span><span class="token punctuation">(</span>seriesModel<span class="token operator">:</span> SeriesModel<span class="token punctuation">,</span> ecModel<span class="token operator">:</span> GlobalModel<span class="token punctuation">,</span> api<span class="token operator">:</span> ExtensionAPI<span class="token punctuation">,</span> payload<span class="token operator">:</span> Payload<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>seriesModel<span class="token punctuation">,</span> ecModel<span class="token punctuation">,</span> api<span class="token punctuation">,</span> payload<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// FIXME never used?</span>    <span class="token function">updateVisual</span><span class="token punctuation">(</span>seriesModel<span class="token operator">:</span> SeriesModel<span class="token punctuation">,</span> ecModel<span class="token operator">:</span> GlobalModel<span class="token punctuation">,</span> api<span class="token operator">:</span> ExtensionAPI<span class="token punctuation">,</span> payload<span class="token operator">:</span> Payload<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>seriesModel<span class="token punctuation">,</span> ecModel<span class="token punctuation">,</span> api<span class="token punctuation">,</span> payload<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">static</span> <span class="token function">markUpdateMethod</span><span class="token punctuation">(</span>payload<span class="token operator">:</span> Payload<span class="token punctuation">,</span> methodName<span class="token operator">:</span> keyof ChartView<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">&#123;</span>        <span class="token function">inner</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">.</span>updateMethod <span class="token operator">=</span> methodName<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">static</span> registerClass<span class="token operator">:</span> clazzUtil<span class="token punctuation">.</span>ClassManager<span class="token punctuation">[</span><span class="token string">'registerClass'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>也是需要关注init和render方法，但是额外不一样的是构造函数里初始化了renderTask，这块在渲染数据的时候会用到。<br>下面再回到setOption方法，我们来看看setOption(src/core/echarts.ts)的实现</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">setOption<span class="token operator">&lt;</span>Opt <span class="token keyword">extends</span> <span class="token class-name">ECBasicOption</span><span class="token operator">></span><span class="token punctuation">(</span>option<span class="token operator">:</span> Opt<span class="token punctuation">,</span> notMerge<span class="token operator">?</span><span class="token operator">:</span> boolean <span class="token operator">|</span> SetOptionOpts<span class="token punctuation">,</span> lazyUpdate<span class="token operator">?</span><span class="token operator">:</span> boolean<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_disposed<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">disposedWarning</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">let</span> silent<span class="token punctuation">;</span>        <span class="token keyword">let</span> replaceMerge<span class="token punctuation">;</span>        <span class="token keyword">let</span> transitionOpt<span class="token operator">:</span> SetOptionTransitionOpt<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isObject</span><span class="token punctuation">(</span>notMerge<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            lazyUpdate <span class="token operator">=</span> notMerge<span class="token punctuation">.</span>lazyUpdate<span class="token punctuation">;</span>            silent <span class="token operator">=</span> notMerge<span class="token punctuation">.</span>silent<span class="token punctuation">;</span>            replaceMerge <span class="token operator">=</span> notMerge<span class="token punctuation">.</span>replaceMerge<span class="token punctuation">;</span>            transitionOpt <span class="token operator">=</span> notMerge<span class="token punctuation">.</span>transition<span class="token punctuation">;</span>            notMerge <span class="token operator">=</span> notMerge<span class="token punctuation">.</span>notMerge<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">this</span><span class="token punctuation">[</span><span class="token constant">IN_MAIN_PROCESS_KEY</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>_model <span class="token operator">||</span> notMerge<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">const</span> optionManager <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OptionManager</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_api<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_theme<span class="token punctuation">;</span>            <span class="token keyword">const</span> ecModel <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_model <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GlobalModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            ecModel<span class="token punctuation">.</span>scheduler <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_scheduler<span class="token punctuation">;</span>            ecModel<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> theme<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_locale<span class="token punctuation">,</span> optionManager<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>_model<span class="token punctuation">.</span><span class="token function">setOption</span><span class="token punctuation">(</span>option <span class="token keyword">as</span> ECBasicOption<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> replaceMerge <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> optionPreprocessorFuncs<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> updateParams <span class="token operator">=</span> <span class="token punctuation">&#123;</span>            seriesTransition<span class="token operator">:</span> transitionOpt<span class="token punctuation">,</span>            optionChanged<span class="token operator">:</span> <span class="token boolean">true</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">as</span> UpdateLifecycleParams<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>lazyUpdate<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">[</span><span class="token constant">PENDING_UPDATE</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>                silent<span class="token operator">:</span> silent<span class="token punctuation">,</span>                updateParams<span class="token operator">:</span> updateParams            <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">[</span><span class="token constant">IN_MAIN_PROCESS_KEY</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token comment">// `setOption(option, &#123;lazyMode: true&#125;)` may be called when zrender has been slept.</span>            <span class="token comment">// It should wake it up to make sure zrender start to render at the next frame.</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getZr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">wakeUp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token function">prepare</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            updateMethods<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> updateParams<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// Ensure zr refresh sychronously, and then pixel in canvas can be</span>            <span class="token comment">// fetched after `setOption`.</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>_zr<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">[</span><span class="token constant">PENDING_UPDATE</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">[</span><span class="token constant">IN_MAIN_PROCESS_KEY</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token function">flushPendingActions</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> silent<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">triggerUpdatedEvent</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> silent<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>初始化model，<code>this._model.setOption(option as ECBasicOption, &#123; replaceMerge &#125;, optionPreprocessorFuncs);</code><br><code>prepare(this);</code>的方法实现</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function-variable function">prepare</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">ecIns<span class="token operator">:</span> ECharts</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">const</span> scheduler <span class="token operator">=</span> ecIns<span class="token punctuation">.</span>_scheduler<span class="token punctuation">;</span>            scheduler<span class="token punctuation">.</span><span class="token function">restorePipelines</span><span class="token punctuation">(</span>ecIns<span class="token punctuation">.</span>_model<span class="token punctuation">)</span><span class="token punctuation">;</span>            scheduler<span class="token punctuation">.</span><span class="token function">prepareStageTasks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">prepareView</span><span class="token punctuation">(</span>ecIns<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">prepareView</span><span class="token punctuation">(</span>ecIns<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            scheduler<span class="token punctuation">.</span><span class="token function">plan</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">restorePipelines</span><span class="token punctuation">(</span>ecModel<span class="token operator">:</span> GlobalModel<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> scheduler <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> pipelineMap <span class="token operator">=</span> scheduler<span class="token punctuation">.</span>_pipelineMap <span class="token operator">=</span> <span class="token function">createHashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ecModel<span class="token punctuation">.</span><span class="token function">eachSeries</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">seriesModel</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">const</span> progressive <span class="token operator">=</span> seriesModel<span class="token punctuation">.</span><span class="token function">getProgressive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">const</span> pipelineId <span class="token operator">=</span> seriesModel<span class="token punctuation">.</span>uid<span class="token punctuation">;</span>            pipelineMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>pipelineId<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>                id<span class="token operator">:</span> pipelineId<span class="token punctuation">,</span>                head<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>                tail<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>                threshold<span class="token operator">:</span> seriesModel<span class="token punctuation">.</span><span class="token function">getProgressiveThreshold</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                progressiveEnabled<span class="token operator">:</span> progressive                    <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token punctuation">(</span>seriesModel<span class="token punctuation">.</span>preventIncremental <span class="token operator">&amp;&amp;</span> seriesModel<span class="token punctuation">.</span><span class="token function">preventIncremental</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                blockIndex<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>                step<span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>progressive <span class="token operator">||</span> <span class="token number">700</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                count<span class="token operator">:</span> <span class="token number">0</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            scheduler<span class="token punctuation">.</span><span class="token function">_pipe</span><span class="token punctuation">(</span>seriesModel<span class="token punctuation">,</span> seriesModel<span class="token punctuation">.</span>dataTask<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中seriesModel的内容:<br><img src="https://cdn.jsdelivr.net/gh/wangdengwu/imagehosting/20211113135714.png"></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">private</span> <span class="token function">_pipe</span><span class="token punctuation">(</span><span class="token parameter">seriesModel<span class="token operator">:</span> SeriesModel<span class="token punctuation">,</span> task<span class="token operator">:</span> GeneralTask</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> pipelineId <span class="token operator">=</span> seriesModel<span class="token punctuation">.</span>uid<span class="token punctuation">;</span>        <span class="token keyword">const</span> pipeline <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_pipelineMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>pipelineId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">!</span>pipeline<span class="token punctuation">.</span>head <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>pipeline<span class="token punctuation">.</span>head <span class="token operator">=</span> task<span class="token punctuation">)</span><span class="token punctuation">;</span>        pipeline<span class="token punctuation">.</span>tail <span class="token operator">&amp;&amp;</span> pipeline<span class="token punctuation">.</span>tail<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span><span class="token punctuation">;</span>        pipeline<span class="token punctuation">.</span>tail <span class="token operator">=</span> task<span class="token punctuation">;</span>        task<span class="token punctuation">.</span>__idxInPipeline <span class="token operator">=</span> pipeline<span class="token punctuation">.</span>count<span class="token operator">++</span><span class="token punctuation">;</span>        task<span class="token punctuation">.</span>__pipeline <span class="token operator">=</span> pipeline<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过_pipe方法就将task加到了pipeline里，等待后续执行task进行渲染。<br>prepareView(ecIns, true);<br>prepareView(ecIns, false);<br>分别执行ComponentView和ChartView的init方法，具体怎么找到对应的clazz呢？</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">doPrepare</span><span class="token punctuation">(</span><span class="token parameter">model<span class="token operator">:</span> ComponentModel</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">const</span> requireNewView <span class="token operator">=</span> model<span class="token punctuation">.</span>__requireNewView<span class="token punctuation">;</span>                model<span class="token punctuation">.</span>__requireNewView <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                <span class="token keyword">const</span> viewId <span class="token operator">=</span> <span class="token string">'_ec_'</span> <span class="token operator">+</span> model<span class="token punctuation">.</span>id <span class="token operator">+</span> <span class="token string">'_'</span> <span class="token operator">+</span> model<span class="token punctuation">.</span>type<span class="token punctuation">;</span>                <span class="token keyword">let</span> view <span class="token operator">=</span> <span class="token operator">!</span>requireNewView <span class="token operator">&amp;&amp;</span> viewMap<span class="token punctuation">[</span>viewId<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">const</span> classType <span class="token operator">=</span> <span class="token function">parseClassType</span><span class="token punctuation">(</span>model<span class="token punctuation">.</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">const</span> Clazz <span class="token operator">=</span> isComponent                        <span class="token operator">?</span> <span class="token punctuation">(</span>ComponentView <span class="token keyword">as</span> ComponentViewConstructor<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span>classType<span class="token punctuation">.</span>main<span class="token punctuation">,</span> classType<span class="token punctuation">.</span>sub<span class="token punctuation">)</span>                        <span class="token operator">:</span> <span class="token punctuation">(</span>                                     <span class="token punctuation">(</span>ChartView <span class="token keyword">as</span> ChartViewConstructor<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span>classType<span class="token punctuation">.</span>sub<span class="token punctuation">)</span>                        <span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>__DEV__<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token function">assert</span><span class="token punctuation">(</span>Clazz<span class="token punctuation">,</span> classType<span class="token punctuation">.</span>sub <span class="token operator">+</span> <span class="token string">' does not exist.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                    view <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Clazz</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    view<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>ecModel<span class="token punctuation">,</span> api<span class="token punctuation">)</span><span class="token punctuation">;</span>                    viewMap<span class="token punctuation">[</span>viewId<span class="token punctuation">]</span> <span class="token operator">=</span> view<span class="token punctuation">;</span>                    viewList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>view <span class="token keyword">as</span> any<span class="token punctuation">)</span><span class="token punctuation">;</span>                    zr<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>view<span class="token punctuation">.</span>group<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                model<span class="token punctuation">.</span>__viewId <span class="token operator">=</span> view<span class="token punctuation">.</span>__id <span class="token operator">=</span> viewId<span class="token punctuation">;</span>                view<span class="token punctuation">.</span>__alive <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                view<span class="token punctuation">.</span>__model <span class="token operator">=</span> model<span class="token punctuation">;</span>                view<span class="token punctuation">.</span>group<span class="token punctuation">.</span>__ecComponentInfo <span class="token operator">=</span> <span class="token punctuation">&#123;</span>                    mainType<span class="token operator">:</span> model<span class="token punctuation">.</span>mainType<span class="token punctuation">,</span>                    index<span class="token operator">:</span> model<span class="token punctuation">.</span>componentIndex                <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>                <span class="token operator">!</span>isComponent <span class="token operator">&amp;&amp;</span> scheduler<span class="token punctuation">.</span><span class="token function">prepareView</span><span class="token punctuation">(</span>                    view <span class="token keyword">as</span> ChartView<span class="token punctuation">,</span> model <span class="token keyword">as</span> SeriesModel<span class="token punctuation">,</span> ecModel<span class="token punctuation">,</span> api                <span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">(</span>ComponentView <span class="token keyword">as</span> ComponentViewConstructor<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span>classType<span class="token punctuation">.</span>main<span class="token punctuation">,</span> classType<span class="token punctuation">.</span>sub<span class="token punctuation">)</span><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> clazzUtil <span class="token keyword">from</span> <span class="token string">'../util/clazz'</span><span class="token punctuation">;</span><span class="token keyword">export</span> type ComponentViewConstructor <span class="token operator">=</span> <span class="token keyword">typeof</span> ComponentView    <span class="token operator">&amp;</span> clazzUtil<span class="token punctuation">.</span>ExtendableConstructor    <span class="token operator">&amp;</span> clazzUtil<span class="token punctuation">.</span>ClassManager<span class="token punctuation">;</span>clazzUtil<span class="token punctuation">.</span><span class="token function">enableClassExtend</span><span class="token punctuation">(</span>ComponentView <span class="token keyword">as</span> ComponentViewConstructor<span class="token punctuation">)</span><span class="token punctuation">;</span>clazzUtil<span class="token punctuation">.</span><span class="token function">enableClassManagement</span><span class="token punctuation">(</span>ComponentView <span class="token keyword">as</span> ComponentViewConstructor<span class="token punctuation">)</span><span class="token punctuation">;</span>target<span class="token punctuation">.</span><span class="token function-variable function">getClass</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>        <span class="token parameter">mainType<span class="token operator">:</span> ComponentMainType<span class="token punctuation">,</span>        subType<span class="token operator">?</span><span class="token operator">:</span> ComponentSubType<span class="token punctuation">,</span>        throwWhenNotFound<span class="token operator">?</span><span class="token operator">:</span> boolean</span>    <span class="token punctuation">)</span><span class="token operator">:</span> Constructor <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> clz <span class="token operator">=</span> storage<span class="token punctuation">[</span>mainType<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>clz <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>clz <span class="token keyword">as</span> SubclassContainer<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token constant">IS_CONTAINER</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            clz <span class="token operator">=</span> subType <span class="token operator">?</span> <span class="token punctuation">(</span>clz <span class="token keyword">as</span> SubclassContainer<span class="token punctuation">)</span><span class="token punctuation">[</span>subType<span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>throwWhenNotFound <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>clz<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>                <span class="token operator">!</span>subType                    <span class="token operator">?</span> mainType <span class="token operator">+</span> <span class="token string">'.'</span> <span class="token operator">+</span> <span class="token string">'type should be specified.'</span>                    <span class="token operator">:</span> <span class="token string">'Component '</span> <span class="token operator">+</span> mainType <span class="token operator">+</span> <span class="token string">'.'</span> <span class="token operator">+</span> <span class="token punctuation">(</span>subType <span class="token operator">||</span> <span class="token string">''</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">' is used but not imported.'</span>            <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> clz <span class="token keyword">as</span> Constructor<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  target<span class="token punctuation">.</span><span class="token function-variable function">registerClass</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>        <span class="token parameter">clz<span class="token operator">:</span> Constructor</span>    <span class="token punctuation">)</span><span class="token operator">:</span> Constructor <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> componentFullType <span class="token operator">=</span> <span class="token punctuation">(</span>clz <span class="token keyword">as</span> any<span class="token punctuation">)</span><span class="token punctuation">.</span>type <span class="token operator">||</span> clz<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>type<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>componentFullType<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">checkClassType</span><span class="token punctuation">(</span>componentFullType<span class="token punctuation">)</span><span class="token punctuation">;</span>            clz<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>type <span class="token operator">=</span> componentFullType<span class="token punctuation">;</span>            <span class="token keyword">const</span> componentTypeInfo <span class="token operator">=</span> <span class="token function">parseClassType</span><span class="token punctuation">(</span>componentFullType<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>componentTypeInfo<span class="token punctuation">.</span>sub<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    storage<span class="token punctuation">[</span>componentTypeInfo<span class="token punctuation">.</span>main<span class="token punctuation">]</span> <span class="token operator">=</span> clz<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>componentTypeInfo<span class="token punctuation">.</span>sub <span class="token operator">!==</span> <span class="token constant">IS_CONTAINER</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">const</span> container <span class="token operator">=</span> <span class="token function">makeContainer</span><span class="token punctuation">(</span>componentTypeInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>                container<span class="token punctuation">[</span>componentTypeInfo<span class="token punctuation">.</span>sub<span class="token punctuation">]</span> <span class="token operator">=</span> clz<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> clz<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token comment">//以TitleView为例</span>  <span class="token keyword">class</span> <span class="token class-name">TitleView</span> <span class="token keyword">extends</span> <span class="token class-name">ComponentView</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">static</span> type <span class="token operator">=</span> <span class="token string">'title'</span> <span class="token keyword">as</span> <span class="token keyword">const</span><span class="token punctuation">;</span>    type <span class="token operator">=</span> TitleView<span class="token punctuation">.</span>type<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">prepareView</span><span class="token punctuation">(</span>view<span class="token operator">:</span> ChartView<span class="token punctuation">,</span> model<span class="token operator">:</span> SeriesModel<span class="token punctuation">,</span> ecModel<span class="token operator">:</span> GlobalModel<span class="token punctuation">,</span> api<span class="token operator">:</span> ExtensionAPI<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> renderTask <span class="token operator">=</span> view<span class="token punctuation">.</span>renderTask<span class="token punctuation">;</span>        <span class="token keyword">const</span> context <span class="token operator">=</span> renderTask<span class="token punctuation">.</span>context<span class="token punctuation">;</span>        context<span class="token punctuation">.</span>model <span class="token operator">=</span> model<span class="token punctuation">;</span>        context<span class="token punctuation">.</span>ecModel <span class="token operator">=</span> ecModel<span class="token punctuation">;</span>        context<span class="token punctuation">.</span>api <span class="token operator">=</span> api<span class="token punctuation">;</span>        renderTask<span class="token punctuation">.</span>__block <span class="token operator">=</span> <span class="token operator">!</span>view<span class="token punctuation">.</span>incrementalPrepareRender<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_pipe</span><span class="token punctuation">(</span>model<span class="token punctuation">,</span> renderTask<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>而BarView不同的地方在，将renderTask加入了pipeline。<br>setOption里的<code>prepare(this);</code>执行完了，总结一下就是初始化Model，初始化对应的ComponentView和ChartView并将series对应的task加入pipeline，再来看下<code>updateMethods.update.call(this, null, updateParams);</code></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">updateMethods <span class="token operator">=</span> <span class="token punctuation">&#123;</span>            <span class="token function">update</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">:</span> ECharts<span class="token punctuation">,</span> payload<span class="token operator">:</span> Payload<span class="token punctuation">,</span> updateParams<span class="token operator">:</span> UpdateLifecycleParams<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">const</span> ecModel <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_model<span class="token punctuation">;</span>                <span class="token keyword">const</span> api <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_api<span class="token punctuation">;</span>                <span class="token keyword">const</span> zr <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_zr<span class="token punctuation">;</span>                <span class="token keyword">const</span> coordSysMgr <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_coordSysMgr<span class="token punctuation">;</span>                <span class="token keyword">const</span> scheduler <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_scheduler<span class="token punctuation">;</span>                <span class="token comment">// update before setOption</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ecModel<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">return</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                ecModel<span class="token punctuation">.</span><span class="token function">setUpdatePayload</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">;</span>                scheduler<span class="token punctuation">.</span><span class="token function">restoreData</span><span class="token punctuation">(</span>ecModel<span class="token punctuation">,</span> payload<span class="token punctuation">)</span><span class="token punctuation">;</span>                scheduler<span class="token punctuation">.</span><span class="token function">performSeriesTasks</span><span class="token punctuation">(</span>ecModel<span class="token punctuation">)</span><span class="token punctuation">;</span>                coordSysMgr<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>ecModel<span class="token punctuation">,</span> api<span class="token punctuation">)</span><span class="token punctuation">;</span>                scheduler<span class="token punctuation">.</span><span class="token function">performDataProcessorTasks</span><span class="token punctuation">(</span>ecModel<span class="token punctuation">,</span> payload<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">updateStreamModes</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> ecModel<span class="token punctuation">)</span><span class="token punctuation">;</span>                coordSysMgr<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>ecModel<span class="token punctuation">,</span> api<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">clearColorPalette</span><span class="token punctuation">(</span>ecModel<span class="token punctuation">)</span><span class="token punctuation">;</span>                scheduler<span class="token punctuation">.</span><span class="token function">performVisualTasks</span><span class="token punctuation">(</span>ecModel<span class="token punctuation">,</span> payload<span class="token punctuation">)</span><span class="token punctuation">;</span>                                <span class="token function">render</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> ecModel<span class="token punctuation">,</span> api<span class="token punctuation">,</span> payload<span class="token punctuation">,</span> updateParams<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">// Set background</span>                <span class="token keyword">let</span> backgroundColor <span class="token operator">=</span> ecModel<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'backgroundColor'</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">'transparent'</span><span class="token punctuation">;</span>                <span class="token keyword">const</span> darkMode <span class="token operator">=</span> ecModel<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'darkMode'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">// In IE8</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>env<span class="token punctuation">.</span>canvasSupported<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">const</span> colorArr <span class="token operator">=</span> colorTool<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>backgroundColor <span class="token keyword">as</span> ColorString<span class="token punctuation">)</span><span class="token punctuation">;</span>                    backgroundColor <span class="token operator">=</span> colorTool<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>colorArr<span class="token punctuation">,</span> <span class="token string">'rgb'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>colorArr<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        backgroundColor <span class="token operator">=</span> <span class="token string">'transparent'</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                    zr<span class="token punctuation">.</span><span class="token function">setBackgroundColor</span><span class="token punctuation">(</span>backgroundColor<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment">// Force set dark mode.</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>darkMode <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> darkMode <span class="token operator">!==</span> <span class="token string">'auto'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        zr<span class="token punctuation">.</span><span class="token function">setDarkMode</span><span class="token punctuation">(</span>darkMode<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>                lifecycle<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">'afterupdate'</span><span class="token punctuation">,</span> ecModel<span class="token punctuation">,</span> api<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最主要的是<code>render(this, ecModel, api, payload, updateParams);</code>方法，</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function-variable function">render</span> <span class="token operator">=</span> <span class="token punctuation">(</span>            <span class="token parameter">ecIns<span class="token operator">:</span> ECharts<span class="token punctuation">,</span> ecModel<span class="token operator">:</span> GlobalModel<span class="token punctuation">,</span> api<span class="token operator">:</span> ExtensionAPI<span class="token punctuation">,</span> payload<span class="token operator">:</span> Payload<span class="token punctuation">,</span>            updateParams<span class="token operator">:</span> UpdateLifecycleParams</span>        <span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            <span class="token function">renderComponents</span><span class="token punctuation">(</span>ecIns<span class="token punctuation">,</span> ecModel<span class="token punctuation">,</span> api<span class="token punctuation">,</span> payload<span class="token punctuation">,</span> updateParams<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">each</span><span class="token punctuation">(</span>ecIns<span class="token punctuation">.</span>_chartsViews<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">chart<span class="token operator">:</span> ChartView</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                chart<span class="token punctuation">.</span>__alive <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">renderSeries</span><span class="token punctuation">(</span>ecIns<span class="token punctuation">,</span> ecModel<span class="token punctuation">,</span> api<span class="token punctuation">,</span> payload<span class="token punctuation">,</span> updateParams<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// Remove groups of unrendered charts</span>            <span class="token function">each</span><span class="token punctuation">(</span>ecIns<span class="token punctuation">.</span>_chartsViews<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">chart<span class="token operator">:</span> ChartView</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>chart<span class="token punctuation">.</span>__alive<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    chart<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>ecModel<span class="token punctuation">,</span> api<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>先来看下<code>renderComponents(ecIns, ecModel, api, payload, updateParams);</code></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function-variable function">renderComponents</span> <span class="token operator">=</span> <span class="token punctuation">(</span>            <span class="token parameter">ecIns<span class="token operator">:</span> ECharts<span class="token punctuation">,</span> ecModel<span class="token operator">:</span> GlobalModel<span class="token punctuation">,</span> api<span class="token operator">:</span> ExtensionAPI<span class="token punctuation">,</span> payload<span class="token operator">:</span> Payload<span class="token punctuation">,</span>            updateParams<span class="token operator">:</span> UpdateLifecycleParams<span class="token punctuation">,</span> dirtyList<span class="token operator">?</span><span class="token operator">:</span> ComponentView<span class="token punctuation">[</span><span class="token punctuation">]</span></span>        <span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            <span class="token function">each</span><span class="token punctuation">(</span>dirtyList <span class="token operator">||</span> ecIns<span class="token punctuation">.</span>_componentsViews<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">componentView<span class="token operator">:</span> ComponentView</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">const</span> componentModel <span class="token operator">=</span> componentView<span class="token punctuation">.</span>__model<span class="token punctuation">;</span>                <span class="token function">clearStates</span><span class="token punctuation">(</span>componentModel<span class="token punctuation">,</span> componentView<span class="token punctuation">)</span><span class="token punctuation">;</span>                componentView<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>componentModel<span class="token punctuation">,</span> ecModel<span class="token punctuation">,</span> api<span class="token punctuation">,</span> payload<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">updateZ</span><span class="token punctuation">(</span>componentModel<span class="token punctuation">,</span> componentView<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">updateStates</span><span class="token punctuation">(</span>componentModel<span class="token punctuation">,</span> componentView<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>ecIns就是echarts实例，那针对这个示例都有哪些_componentsViews呢，<br><img src="https://cdn.jsdelivr.net/gh/wangdengwu/imagehosting/20211114010528.png"><br>拿其中一个TitleView来细看一下</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">render</span><span class="token punctuation">(</span><span class="token parameter">titleModel<span class="token operator">:</span> TitleModel<span class="token punctuation">,</span> ecModel<span class="token operator">:</span> GlobalModel<span class="token punctuation">,</span> api<span class="token operator">:</span> ExtensionAPI</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>group<span class="token punctuation">.</span><span class="token function">removeAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> group <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>group<span class="token punctuation">;</span>               <span class="token keyword">const</span> textEl <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">graphic<span class="token punctuation">.</span>Text</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            style<span class="token operator">:</span> <span class="token function">createTextStyle</span><span class="token punctuation">(</span>textStyleModel<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>                text<span class="token operator">:</span> titleModel<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'text'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                fill<span class="token operator">:</span> textStyleModel<span class="token punctuation">.</span><span class="token function">getTextColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>disableBox<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            z2<span class="token operator">:</span> <span class="token number">10</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        group<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>textEl<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>render方法实在太长了，我删掉了样式，子标题，背景，标题框等相关代码，只留下Text渲染相关的了。<br>可以看到，真正的渲染是调用了zrender的graphic.Text，并添加到了group里。<br>再来看renderSeries</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">renderSeries <span class="token operator">=</span> <span class="token punctuation">(</span>            ecIns<span class="token operator">:</span> ECharts<span class="token punctuation">,</span>            ecModel<span class="token operator">:</span> GlobalModel<span class="token punctuation">,</span>            api<span class="token operator">:</span> ExtensionAPI<span class="token punctuation">,</span>            payload<span class="token operator">:</span> Payload <span class="token operator">|</span> <span class="token string">'remain'</span><span class="token punctuation">,</span>            updateParams<span class="token operator">:</span> UpdateLifecycleParams<span class="token punctuation">,</span>            dirtyMap<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">[</span>uid<span class="token operator">:</span> string<span class="token punctuation">]</span><span class="token operator">:</span> any<span class="token punctuation">&#125;</span>        <span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            <span class="token comment">// Render all charts</span>            <span class="token keyword">const</span> scheduler <span class="token operator">=</span> ecIns<span class="token punctuation">.</span>_scheduler<span class="token punctuation">;</span>            updateParams <span class="token operator">=</span> <span class="token function">extend</span><span class="token punctuation">(</span>updateParams <span class="token operator">||</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>                updatedSeries<span class="token operator">:</span> ecModel<span class="token punctuation">.</span><span class="token function">getSeries</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">let</span> unfinished<span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            ecModel<span class="token punctuation">.</span><span class="token function">eachSeries</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">seriesModel</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">const</span> chartView <span class="token operator">=</span> ecIns<span class="token punctuation">.</span>_chartsMap<span class="token punctuation">[</span>seriesModel<span class="token punctuation">.</span>__viewId<span class="token punctuation">]</span><span class="token punctuation">;</span>                chartView<span class="token punctuation">.</span>__alive <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                <span class="token keyword">const</span> renderTask <span class="token operator">=</span> chartView<span class="token punctuation">.</span>renderTask<span class="token punctuation">;</span>                 <span class="token keyword">if</span> <span class="token punctuation">(</span>renderTask<span class="token punctuation">.</span><span class="token function">perform</span><span class="token punctuation">(</span>scheduler<span class="token punctuation">.</span><span class="token function">getPerformArgs</span><span class="token punctuation">(</span>renderTask<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    unfinished <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最重要的就是调用了renderTask.perform<br>Task(src/core/task.ts)的perform方法。方法比较长，我就不贴代码了，主干是调用了<code>                    this._doProgress(progress, start, end, modBy, modDataCount);</code></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> progressMethodMap<span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">[</span>method<span class="token operator">:</span> string<span class="token punctuation">]</span><span class="token operator">:</span> TaskResetCallbackReturn<span class="token operator">&lt;</span>SeriesTaskContext<span class="token operator">></span><span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    incrementalPrepareRender<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token function-variable function">progress</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">params<span class="token operator">:</span> StageHandlerProgressParams<span class="token punctuation">,</span> context<span class="token operator">:</span> SeriesTaskContext</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">&#123;</span>            context<span class="token punctuation">.</span>view<span class="token punctuation">.</span><span class="token function">incrementalRender</span><span class="token punctuation">(</span>                params<span class="token punctuation">,</span> context<span class="token punctuation">.</span>model<span class="token punctuation">,</span> context<span class="token punctuation">.</span>ecModel<span class="token punctuation">,</span> context<span class="token punctuation">.</span>api<span class="token punctuation">,</span> context<span class="token punctuation">.</span>payload            <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    render<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// Put view.render in `progress` to support appendData. But in this case</span>        <span class="token comment">// view.render should not be called in reset, otherwise it will be called</span>        <span class="token comment">// twise. Use `forceFirstProgress` to make sure that view.render is called</span>        <span class="token comment">// in any cases.</span>        forceFirstProgress<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token function-variable function">progress</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">params<span class="token operator">:</span> StageHandlerProgressParams<span class="token punctuation">,</span> context<span class="token operator">:</span> SeriesTaskContext</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">&#123;</span>            context<span class="token punctuation">.</span>view<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>                context<span class="token punctuation">.</span>model<span class="token punctuation">,</span> context<span class="token punctuation">.</span>ecModel<span class="token punctuation">,</span> context<span class="token punctuation">.</span>api<span class="token punctuation">,</span> context<span class="token punctuation">.</span>payload            <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>紧接着调用了progress方法，而progress方法里调用了view的render，以此示例的BarView举例</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">render</span><span class="token punctuation">(</span><span class="token parameter">seriesModel<span class="token operator">:</span> BarSeriesModel<span class="token punctuation">,</span> ecModel<span class="token operator">:</span> GlobalModel<span class="token punctuation">,</span> api<span class="token operator">:</span> ExtensionAPI<span class="token punctuation">,</span> payload<span class="token operator">:</span> Payload</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>_model <span class="token operator">=</span> seriesModel<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_removeOnRenderedListener</span><span class="token punctuation">(</span>api<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_updateDrawMode</span><span class="token punctuation">(</span>seriesModel<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> coordinateSystemType <span class="token operator">=</span> seriesModel<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'coordinateSystem'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>coordinateSystemType <span class="token operator">===</span> <span class="token string">'cartesian2d'</span>            <span class="token operator">||</span> coordinateSystemType <span class="token operator">===</span> <span class="token string">'polar'</span>        <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>_isLargeDraw                <span class="token operator">?</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_renderLarge</span><span class="token punctuation">(</span>seriesModel<span class="token punctuation">,</span> ecModel<span class="token punctuation">,</span> api<span class="token punctuation">)</span>                <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_renderNormal</span><span class="token punctuation">(</span>seriesModel<span class="token punctuation">,</span> ecModel<span class="token punctuation">,</span> api<span class="token punctuation">,</span> payload<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>__DEV__<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">'Only cartesian2d and polar supported for bar.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>根据是否是_isLargeDraw而分别调用不同的render，本示走的是_renderNormal方法。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">private</span> <span class="token function">_renderNormal</span><span class="token punctuation">(</span>        seriesModel<span class="token operator">:</span> BarSeriesModel<span class="token punctuation">,</span>        ecModel<span class="token operator">:</span> GlobalModel<span class="token punctuation">,</span>        api<span class="token operator">:</span> ExtensionAPI<span class="token punctuation">,</span>        payload<span class="token operator">:</span> Payload    <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> group <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>group<span class="token punctuation">;</span>        <span class="token keyword">const</span> data <span class="token operator">=</span> seriesModel<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> oldData <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_data<span class="token punctuation">;</span>        data<span class="token punctuation">.</span><span class="token function">diff</span><span class="token punctuation">(</span>oldData<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">dataIndex</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">const</span> itemModel <span class="token operator">=</span> data<span class="token punctuation">.</span>getItemModel<span class="token operator">&lt;</span>BarDataItemOption<span class="token operator">></span><span class="token punctuation">(</span>dataIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">const</span> layout <span class="token operator">=</span> getLayout<span class="token punctuation">[</span>coord<span class="token punctuation">.</span>type<span class="token punctuation">]</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> dataIndex<span class="token punctuation">,</span> itemModel<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">const</span> el <span class="token operator">=</span> elementCreator<span class="token punctuation">[</span>coord<span class="token punctuation">.</span>type<span class="token punctuation">]</span><span class="token punctuation">(</span>                    seriesModel<span class="token punctuation">,</span>                    data<span class="token punctuation">,</span>                    dataIndex<span class="token punctuation">,</span>                    layout<span class="token punctuation">,</span>                    isHorizontalOrRadial<span class="token punctuation">,</span>                    animationModel<span class="token punctuation">,</span>                    baseAxis<span class="token punctuation">.</span>model<span class="token punctuation">,</span>                    <span class="token boolean">false</span><span class="token punctuation">,</span>                    roundCap                <span class="token punctuation">)</span><span class="token punctuation">;</span>                group<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>_data <span class="token operator">=</span> data<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">const</span> elementCreator<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">[</span>key <span class="token keyword">in</span> <span class="token string">'polar'</span> <span class="token operator">|</span> <span class="token string">'cartesian2d'</span><span class="token punctuation">]</span><span class="token operator">:</span> ElementCreator<span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token function">cartesian2d</span><span class="token punctuation">(</span>        <span class="token parameter">seriesModel<span class="token punctuation">,</span> data<span class="token punctuation">,</span> newIndex<span class="token punctuation">,</span> layout<span class="token operator">:</span> RectLayout<span class="token punctuation">,</span> isHorizontal<span class="token punctuation">,</span>        animationModel<span class="token punctuation">,</span> axisModel<span class="token punctuation">,</span> isUpdate<span class="token punctuation">,</span> roundCap</span>    <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> rect <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Rect</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            shape<span class="token operator">:</span> <span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> layout<span class="token punctuation">)</span><span class="token punctuation">,</span>            z2<span class="token operator">:</span> <span class="token number">1</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">(</span>rect <span class="token keyword">as</span> any<span class="token punctuation">)</span><span class="token punctuation">.</span>__dataIndex <span class="token operator">=</span> newIndex<span class="token punctuation">;</span>        rect<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">'item'</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>animationModel<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">const</span> rectShape <span class="token operator">=</span> rect<span class="token punctuation">.</span>shape<span class="token punctuation">;</span>            <span class="token keyword">const</span> animateProperty <span class="token operator">=</span> isHorizontal <span class="token operator">?</span> <span class="token string">'height'</span> <span class="token operator">:</span> <span class="token string">'width'</span> <span class="token keyword">as</span> <span class="token string">'width'</span> <span class="token operator">|</span> <span class="token string">'height'</span><span class="token punctuation">;</span>            rectShape<span class="token punctuation">[</span>animateProperty<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> rect<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>方法太长，我删掉了非主干代码，可以看到最终根据Model的data的diff来进行add,update,remove,最终还是调用了zrender的Rect来画出bar的样子。<br>最后贴一下渲染BarView的调用栈<br><img src="https://cdn.jsdelivr.net/gh/wangdengwu/imagehosting/20211114021358.png"><br>渲染ComponentView比较直接，而渲染ChartView类型的就绕来绕去，主要原因是ChartView可能数据比较多，需要逐步分批渲染，以减少卡顿，保持每秒60帧的渲染，因为1000ms，每一帧不能超过16ms，才能保持流畅的渲染。<br>在setOption方法的最后调用了<code>this._zr.flush();</code>则直接将绘制渲染出来了，当然对于ChartView的绘制，可能还需要等到下一次渲染的时候才会显示出来。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">private</span> <span class="token function">_onframe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_disposed<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token function">applyChangedStates</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> scheduler <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_scheduler<span class="token punctuation">;</span>        <span class="token comment">// Lazy update</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">[</span><span class="token constant">PENDING_UPDATE</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">const</span> silent <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">[</span><span class="token constant">PENDING_UPDATE</span><span class="token punctuation">]</span> <span class="token keyword">as</span> any<span class="token punctuation">)</span><span class="token punctuation">.</span>silent<span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">[</span><span class="token constant">IN_MAIN_PROCESS_KEY</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token function">prepare</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            updateMethods<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">[</span><span class="token constant">PENDING_UPDATE</span><span class="token punctuation">]</span><span class="token punctuation">.</span>updateParams<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// At present, in each frame, zrender performs:</span>            <span class="token comment">//   (1) animation step forward.</span>            <span class="token comment">//   (2) trigger('frame') (where this `_onframe` is called)</span>            <span class="token comment">//   (3) zrender flush (render).</span>            <span class="token comment">// If we do nothing here, since we use `setToFinal: true`, the step (3) above</span>            <span class="token comment">// will render the final state of the elements before the real animation started.</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>_zr<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">[</span><span class="token constant">IN_MAIN_PROCESS_KEY</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">[</span><span class="token constant">PENDING_UPDATE</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>            <span class="token function">flushPendingActions</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> silent<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">triggerUpdatedEvent</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> silent<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// Avoid do both lazy update and progress in one frame.</span>        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>scheduler<span class="token punctuation">.</span>unfinished<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// Stream progress.</span>            <span class="token keyword">let</span> remainTime <span class="token operator">=</span> <span class="token constant">TEST_FRAME_REMAIN_TIME</span><span class="token punctuation">;</span>            <span class="token keyword">const</span> ecModel <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_model<span class="token punctuation">;</span>            <span class="token keyword">const</span> api <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_api<span class="token punctuation">;</span>            scheduler<span class="token punctuation">.</span>unfinished <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token keyword">do</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">const</span> startTime <span class="token operator">=</span> <span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                scheduler<span class="token punctuation">.</span><span class="token function">performSeriesTasks</span><span class="token punctuation">(</span>ecModel<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">// Currently dataProcessorFuncs do not check threshold.</span>                scheduler<span class="token punctuation">.</span><span class="token function">performDataProcessorTasks</span><span class="token punctuation">(</span>ecModel<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">updateStreamModes</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> ecModel<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">// Do not update coordinate system here. Because that coord system update in</span>                <span class="token comment">// each frame is not a good user experience. So we follow the rule that</span>                <span class="token comment">// the extent of the coordinate system is determin in the first frame (the</span>                <span class="token comment">// frame is executed immedietely after task reset.</span>                <span class="token comment">// this._coordSysMgr.update(ecModel, api);</span>                <span class="token comment">// console.log('--- ec frame visual ---', remainTime);</span>                scheduler<span class="token punctuation">.</span><span class="token function">performVisualTasks</span><span class="token punctuation">(</span>ecModel<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">renderSeries</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_model<span class="token punctuation">,</span> api<span class="token punctuation">,</span> <span class="token string">'remain'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                remainTime <span class="token operator">-=</span> <span class="token punctuation">(</span><span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> startTime<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span>remainTime <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> scheduler<span class="token punctuation">.</span>unfinished<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// Call flush explicitly for trigger finished event.</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>scheduler<span class="token punctuation">.</span>unfinished<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>_zr<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token comment">// Else, zr flushing be ensue within the same frame,</span>            <span class="token comment">// because zr flushing is after onframe event.</span>        <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>对于echarts的渲染分析就到这了，下次有机会我们自己动手写一个ChartView。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图表 - echarts </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue3 新特性</title>
      <link href="/2021/11/02/vue3-xin-te-xing/"/>
      <url>/2021/11/02/vue3-xin-te-xing/</url>
      
        <content type="html"><![CDATA[<h2 id="vue2的历史问题"><a href="#vue2的历史问题" class="headerlink" title="vue2的历史问题"></a>vue2的历史问题</h2><p>为什么需要有Vue3？有人开玩笑式的抱怨</p><blockquote><p>别再升级了，老子学不动了</p></blockquote><p>框架升级一定是有原因的，是为了解决问题或者带来新特性，否则不会跨大版本不兼容升级。<br>为什么vue要有vue3呢，先来看看vue2框架结构和一些历史遗留问题。<br>vue2由几大块组成：组件，响应式，虚拟DOM，运行时，浏览器耦合模块。但是由于历史原因，其有以下几个缺点：</p><ol><li>vue2是基于Flow.js来做类型校验的，但是现在Flow.js已经停止维护。</li><li>vue2的运行时耦合浏览器操作，这会带来如果需要适配小程序，则要改vue核心代码才行。</li><li>vue2的响应式，也不是真正意义上的proxy，而是为了兼容IE使用了Object.defineProperty()，有很大的性能问题。</li><li>对应代码较多的组件，data,methods导致数据和方法隔离，当行数比较多时，需要来回查看，不利于维护。</li></ol><h2 id="vue3的新特性"><a href="#vue3的新特性" class="headerlink" title="vue3的新特性"></a>vue3的新特性</h2><h5 id="响应式系统，使用了Proxy来实现，所以vue3不再兼容IE11以下浏览器。"><a href="#响应式系统，使用了Proxy来实现，所以vue3不再兼容IE11以下浏览器。" class="headerlink" title="响应式系统，使用了Proxy来实现，所以vue3不再兼容IE11以下浏览器。"></a>响应式系统，使用了Proxy来实现，所以vue3不再兼容IE11以下浏览器。</h5><h5 id="自定义渲染器，将浏览器相关渲染独立出来，这样只需要增加对小程序渲染的模块，就增加了对小程序的支持。"><a href="#自定义渲染器，将浏览器相关渲染独立出来，这样只需要增加对小程序渲染的模块，就增加了对小程序的支持。" class="headerlink" title="自定义渲染器，将浏览器相关渲染独立出来，这样只需要增加对小程序渲染的模块，就增加了对小程序的支持。"></a>自定义渲染器，将浏览器相关渲染独立出来，这样只需要增加对小程序渲染的模块，就增加了对小程序的支持。</h5><h5 id="使用TypeScript重构，增强了类型安全。"><a href="#使用TypeScript重构，增强了类型安全。" class="headerlink" title="使用TypeScript重构，增强了类型安全。"></a>使用TypeScript重构，增强了类型安全。</h5><h5 id="Composition-API-组合语法，解决数据定义和方法分开导致的注意力打断，复杂逻辑的代码行数很多的情况下，便于维护。"><a href="#Composition-API-组合语法，解决数据定义和方法分开导致的注意力打断，复杂逻辑的代码行数很多的情况下，便于维护。" class="headerlink" title="Composition API 组合语法，解决数据定义和方法分开导致的注意力打断，复杂逻辑的代码行数很多的情况下，便于维护。"></a>Composition API 组合语法，解决数据定义和方法分开导致的注意力打断，复杂逻辑的代码行数很多的情况下，便于维护。</h5><h6 id="vue2写法"><a href="#vue2写法" class="headerlink" title="vue2写法"></a>vue2写法</h6><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> App <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>      count<span class="token operator">:</span> <span class="token number">1</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token operator">++</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  computed<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token function">double</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">*</span> <span class="token number">2</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">'#app'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="vue3写法"><a href="#vue3写法" class="headerlink" title="vue3写法"></a>vue3写法</h6><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> reactive<span class="token punctuation">,</span> computed <span class="token punctuation">&#125;</span> <span class="token operator">=</span> Vue<span class="token keyword">let</span> App <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      count<span class="token operator">:</span> <span class="token number">1</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      state<span class="token punctuation">.</span>count<span class="token operator">++</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">const</span> double <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> state<span class="token punctuation">.</span>count <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span> state<span class="token punctuation">,</span> add<span class="token punctuation">,</span> double <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">'#app'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="Vue-3-还内置了-Fragment、Teleport-和-Suspense-三个新组件"><a href="#Vue-3-还内置了-Fragment、Teleport-和-Suspense-三个新组件" class="headerlink" title="Vue 3 还内置了 Fragment、Teleport 和 Suspense 三个新组件"></a>Vue 3 还内置了 Fragment、Teleport 和 Suspense 三个新组件</h5><ul><li> Fragment: Vue 3 组件不再要求有一个唯一的根节点，清除了很多无用的占位 div。</li><li> Teleport: 允许组件渲染在别的元素内，主要开发弹窗组件的时候特别有用。</li><li> Suspense: 异步组件，更方便开发有异步请求的组件。</li></ul><h5 id="新一代工程化工具-Vite"><a href="#新一代工程化工具-Vite" class="headerlink" title="新一代工程化工具 Vite"></a>新一代工程化工具 Vite</h5><p>Webpack采用预编译的方式，往往由于工程文件很多，导致打包时间要到分钟级别，严重影响开发体验，而Vite采用按需加载，可以大大缩短启动时间，开发期间几乎秒启动，按需加载。</p><h2 id="vue2要不要升级vue3"><a href="#vue2要不要升级vue3" class="headerlink" title="vue2要不要升级vue3"></a>vue2要不要升级vue3</h2><p><img src="https://cdn.jsdelivr.net/gh/wangdengwu/imagehosting/20211102164915.png"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>工程化工具 Vite 带来了更丝滑的调试体验。</li><li>对于产品的最终效果来看，Vue 3 性能更高，体积更小。</li><li>对于普通开发者来说，Composition API 组合语法带来了更好的组织代码的形式。</li><li>全新的响应式系统基于 Proxy，也可以独立使用。</li><li>Vue 3 内置了新的 Fragment、Teleport 和 Suspense 等组件。</li><li>对于 Vue 的二次开发来说，自定义渲染器让我们开发跨端应用时更加得心应手。</li><li>对于 Vue 的源码维护者，全部的模块使用 TypeScript 重构，能够带来更好的可维护性。<br><img src="https://cdn.jsdelivr.net/gh/wangdengwu/imagehosting/20211102163240.png"></li></ul>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker简介</title>
      <link href="/2021/11/01/docker-jian-jie/"/>
      <url>/2021/11/01/docker-jian-jie/</url>
      
        <content type="html"><![CDATA[<h2 id="docker简介"><a href="#docker简介" class="headerlink" title="docker简介"></a>docker简介</h2><p>docker是一种虚拟化技术，但是和虚拟机又不一样，比较轻量级，最大的好处就是隔离底层硬件和软件的区别，然后让软件跑在统一的环境下，而减少因为底层软硬件环境的问题，导致的软件出错和不一致性。</p><p>docker使用容器这一概念来实现，在一台机器上可以运行多个隔离的容器，每个容器内包含运行所需的所有内容，包括操作系统和底层依赖，例如：容器包括centos7的操作系统，并且含有jdk1.8的底层依赖，然后就可以分享容器，其他人只需要获取到容器，就可以直接运行你的代码，而且所有人的环境都是一样的。</p><p>我们可以用docker来快速分享开发环境，也可以用于生产环境快速扩容，因为环境都是一致的，并且docker获取和运行容器非常快速。而我主要使用docker来隔离本地环境，不想因为尝试某种技术，而污染本地的开发环境，又可以快速分享这种演示环境。后续如果可以使用docker来分发开发环境，我将使用docker，除非是docker无法支持的环境，如Mac特有的xcode打包等，不过目前看这种极特殊的情况很少发生。</p><h2 id="docker架构"><a href="#docker架构" class="headerlink" title="docker架构"></a>docker架构</h2><p><img src="https://docs.docker.com/engine/images/architecture.svg"><br>docker采用的是client-server架构，client（docker）和daemon（dockerd）通讯，client和daemon可以是在同一台机器上，也可以远程访问另外一台机器的daemon，其通讯采用的是rest-api方式。<br>daemon主要负责监听API请求，并管理镜像，容器，网络，存储等。<br>client则比较轻量一点，主要负责发送命令，比如docker run等<br>另外镜像还可以被注册和分享，通过Docker Hub可以找到很多公共镜像，从而达到快速构建容器的目的。</p><h2 id="镜像"><a href="#镜像" class="headerlink" title="镜像"></a>镜像</h2><p>镜像是创建容器所需的指令模板，只读，通常一个镜像可能基于另外一个镜像，做一些自己的增强，比如基于Ubuntu的系统镜像，做一些安装和配置Nginx的指令。我们可以使用Dockerfile来定义这些步骤命令，通过这个文件就可以build出镜像文件，并且分享。</p><h2 id="容器"><a href="#容器" class="headerlink" title="容器"></a>容器</h2><p>容器就是运行镜像的实例，你可以create，start，stop，move，delete镜像，你可以远程链接到该镜像，给它分配存储，甚至创建一个新的镜像基于容器当前的状态。容器彼此之间都是隔离的。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker run -i -t ubuntu /bin/bash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>当你在命令行敲了上面的代码，执行过程如下：</p><ol><li>如果你本地没有Ubuntu的镜像，则向注册中心请求该镜像文件，就像你手动执行了<code>docker pull ubuntu</code>一样。</li><li>创建新的容器，就像你手动执行<code>docker container create</code>一样。</li><li>分配可读写文件给容器，作为它的最后一层，这样允许容器被可控的修改，阻止了对于镜像其它可能的修改，即安全又便捷。</li><li>创建默认的网络接口，如果你没有自定义的话，将分配本地IP给容器，并且默认具有通过本地机器访问外部网络的能力。</li><li>容器启动，并且执行<code>/bin/bash</code>,可以和容器进行交互，因为使用了-i和-t的选项。</li><li>当你使用exit退出时，容器将停止，但是没有被删除，你还可以start或者remove。</li></ol><h2 id="docker安装"><a href="#docker安装" class="headerlink" title="docker安装"></a>docker安装</h2><p>我们安装docker桌面版，因为有图形化界面，可以更直观<br>安装地址为<a href="https://docs.docker.com/desktop/">docker桌面版</a>,选择自己对应的操作系统，比如Windows还是Mac<br>具体安装步骤就不详细说明了，Windows需要注意开启主板的虚拟设置，Mac需要选择Intel芯片还是M1芯片的安装文件。<br>安装完界面如下：<img src="https://cdn.jsdelivr.net/gh/wangdengwu/imagehosting/20211101164658.png"></p><p>后续一些需要分享开发环境的，都将采用docker的镜像分享，以方便快速统一环境。</p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自定义Spring Gateway负载均衡策略实现内网开发调试</title>
      <link href="/2021/10/26/shi-xian-nei-wang-kai-fa-diao-shi/"/>
      <url>/2021/10/26/shi-xian-nei-wang-kai-fa-diao-shi/</url>
      
        <content type="html"><![CDATA[<p>公司使用spring cloud微服务，网关使用的是spring gateway，配合nacos注册中心</p><p>日常开发测试有个需求，就是自己本地起微服务，不管是通过前端页面点击调试，还是工具如postman发送api请求，都希望自己本地IP发起的请求，都转发到自己本地的微服务上，gateway无论是开发环境还是测试环境都是共用的，另外有一整套配套的开发环境或者测试环境的微服务，这样本地就不需要额外起gateway和对应的和自己这次开发无关的微服务了。</p><p>我其实对spring gateway的源码也不熟，之前调试过一次gateway内存泄漏，是官方的bug，堆外内存的count忘记释放了，导致gateway每过一段时间就停止服务，原因是堆外内存的count达到最大值，这是另外一个话题了，现在就想重写lb的策略，通过自己自定义的策略来实现上述需求。</p><p>我们熟悉代码最快的方法是什么？我觉得是debug，那就先本地debug启动gateway，然后打上断点，来通过debug调试熟悉整个请求转发以及lb的策略是什么样的。</p><p>首先我知道gateway一定会走LoadBalancerClientFilter，别问我怎么知道的，要问就是随便在spring-cloud-gateway-core的源码里根据类名猜的，这个基类只有2个方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">></span></span> <span class="token function">filter</span><span class="token punctuation">(</span><span class="token class-name">ServerWebExchange</span> exchange<span class="token punctuation">,</span> <span class="token class-name">GatewayFilterChain</span> chain<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">protected</span> <span class="token class-name">ServiceInstance</span> <span class="token function">choose</span><span class="token punctuation">(</span><span class="token class-name">ServerWebExchange</span> exchange<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>都打上断点瞅一瞅</p><p>通过Paw给本地的gateway发请求       <img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2a0e03c57394408a94780cccd33010fc~tplv-k3u1fbpfcp-zoom-1.image"></p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ba9abdaec5eb4649bbeee78e842ffe26~tplv-k3u1fbpfcp-zoom-1.image"></p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3cca186a8aaa474aaebf80f9bf404df0~tplv-k3u1fbpfcp-zoom-1.image"></p><p>这个里面和这次需求有关的代码为：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">if</span> <span class="token punctuation">(</span>url <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token string">"lb"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">getScheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">"lb"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>schemePrefix<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这块判断因为反编译所以是写死的lb字符串，以spring的技术规范，源码应该不至于写成这样。</p><p>只有配置成lb协议的才会走choose方法,而根据choose的返回值可以猜出来这个方法的作用就是选取一个服务提供者。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">protected</span> <span class="token class-name">ServiceInstance</span> <span class="token function">choose</span><span class="token punctuation">(</span><span class="token class-name">ServerWebExchange</span> exchange<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>loadBalancer<span class="token punctuation">.</span><span class="token function">choose</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>URI<span class="token punctuation">)</span>exchange<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token class-name">ServerWebExchangeUtils</span><span class="token punctuation">.</span>GATEWAY_REQUEST_URL_ATTR<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>而choose的方法实现调用了loadBalancer的choose方法。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1f1fb17446624951aed2e882c2aa0bcf~tplv-k3u1fbpfcp-zoom-1.image"></p><p>而实现了choose接口方法的实现类有哪些呢？<img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3ef9ac25d2e64da99bd4291e4d1290aa~tplv-k3u1fbpfcp-zoom-1.image"></p><p>我目前也不知道会走哪个实现类，都打上断点看看会到哪个实现类里</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2fd65caddee6475d8bec23e0da22a0d2~tplv-k3u1fbpfcp-zoom-1.image"></p><p>可以看到走的是RibbonLoadBalancerClient这个实现类。方法实现又转给了自己的choose方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token class-name">ServiceInstance</span> <span class="token function">choose</span><span class="token punctuation">(</span><span class="token class-name">String</span> serviceId<span class="token punctuation">,</span> <span class="token class-name">Object</span> hint<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Server</span> server <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getServer</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getLoadBalancer</span><span class="token punctuation">(</span>serviceId<span class="token punctuation">)</span><span class="token punctuation">,</span> hint<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> server <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">RibbonLoadBalancerClient<span class="token punctuation">.</span>RibbonServer</span><span class="token punctuation">(</span>serviceId<span class="token punctuation">,</span> server<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSecure</span><span class="token punctuation">(</span>server<span class="token punctuation">,</span> serviceId<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">serverIntrospector</span><span class="token punctuation">(</span>serviceId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMetadata</span><span class="token punctuation">(</span>server<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">protected</span> <span class="token class-name">ILoadBalancer</span> <span class="token function">getLoadBalancer</span><span class="token punctuation">(</span><span class="token class-name">String</span> serviceId<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>clientFactory<span class="token punctuation">.</span><span class="token function">getLoadBalancer</span><span class="token punctuation">(</span>serviceId<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">protected</span> <span class="token class-name">Server</span> <span class="token function">getServer</span><span class="token punctuation">(</span><span class="token class-name">ILoadBalancer</span> loadBalancer<span class="token punctuation">,</span> <span class="token class-name">Object</span> hint<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> loadBalancer <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> loadBalancer<span class="token punctuation">.</span><span class="token function">chooseServer</span><span class="token punctuation">(</span>hint <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> hint <span class="token operator">:</span> <span class="token string">"default"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过抽象工厂拿到对应的loadBalancer，并调用其chooseServer方法</p><p>真实的loadBalancer是谁呢？是ZoneAwareLoadBalancer继承DynamicServerListLoadBalancer，这个loadBalancer为什么是ZoneAwareLoadBalancer，可以配置么？我目前还不知道。先忽略工厂策略，继续往下走。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ba652788c4d7494eb58997944cefe349~tplv-k3u1fbpfcp-zoom-1.image"></p><p>这个ZoneAwareLoadBalancer玩了个寂寞，因为我只有一个Zone所以直接调用父类BaseLoadBalancer的chooseServer方法，并传了个default的key。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token class-name">Server</span> <span class="token function">chooseServer</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>counter <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>counter <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createCounter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>counter<span class="token punctuation">.</span><span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>rule <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>rule<span class="token punctuation">.</span><span class="token function">choose</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> var3<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                logger<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">"LoadBalancer [&#123;&#125;]:  Error choosing server for key &#123;&#125;"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">,</span> key<span class="token punctuation">,</span> var3<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里又转交给了rule的choose方法。这里的rule是IRule接口，实现类有如下几个：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4cd44c14a29b4d59ac085814d7d36264~tplv-k3u1fbpfcp-zoom-1.image"></p><p>实际实现类是ZoneAvoidanceRule继承PredicateBasedRule</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token class-name">Server</span> <span class="token function">choose</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ILoadBalancer</span> lb <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getLoadBalancer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Server</span><span class="token punctuation">></span></span> server <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getPredicate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">chooseRoundRobinAfterFiltering</span><span class="token punctuation">(</span>lb<span class="token punctuation">.</span><span class="token function">getAllServers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> server<span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">(</span><span class="token class-name">Server</span><span class="token punctuation">)</span>server<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">public abstract AbstractServerPredicate getPredicate();<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>交给了实现了chooseRoundRobinAfterFiltering抽象方法的AbstractServerPredicate,而具体实现方法为：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">incrementAndGetModulo</span><span class="token punctuation">(</span><span class="token keyword">int</span> modulo<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> current<span class="token punctuation">;</span>        <span class="token keyword">int</span> next<span class="token punctuation">;</span>        <span class="token keyword">do</span> <span class="token punctuation">&#123;</span>            current <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>nextIndex<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            next <span class="token operator">=</span> <span class="token punctuation">(</span>current <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> modulo<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>nextIndex<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>current<span class="token punctuation">,</span> next<span class="token punctuation">)</span> <span class="token operator">||</span> current <span class="token operator">>=</span> modulo<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> current<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>至此找到了一个轮询的Server，这是默认实现。</p><p>你觉得我还有机会吗？先理一下思路，有2个抽象点可以深入看下，一个是获取loadBalancer的时候，一个是loadBalancer的rule。</p><p>我们一个一个回溯再深入一下，首先我们还是要回答开头的一个问题</p><blockquote><p>首先我知道gateway一定会走LoadBalancerClientFilter，别问我怎么知道的，要问就是随便在spring-cloud-gateway-core的源码里根据类名猜的</p></blockquote><p>这么不负责任的回答，我现在再看都有点脸红，不瞒你了，直接上代码吧</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ac5ed7b86cf34516ab1f8652c4295ea7~tplv-k3u1fbpfcp-zoom-1.image"> </p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f438637efe6944ceadcb923db9683a33~tplv-k3u1fbpfcp-zoom-1.image"></p><p>自动加载机制，初始化了LoadBalancerClientFilter,并且依赖RibbonAutoConfiguration.而LoadBalancerClientFilter初始化也需要2个参数：LoadBalancerClient和LoadBalancerProperties，我们看下RibbonAutoConfiguration：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c8e89937319842ca93630013e7487fdf~tplv-k3u1fbpfcp-zoom-1.image"></p><p>重点这两个Bean，至此LoadBalancerClientFilter初始化完毕，并加入gateway的Filter大军，执行</p><p>public Mono<Void> filter(ServerWebExchange exchange, GatewayFilterChain chain)方法</p><p>现在回到之前留的一个疑问，<img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4c1cf636434742d8a30b5349c1c26bfe~tplv-k3u1fbpfcp-zoom-1.image"></p><p>这个loadBalancer其实就是LoadBalancerClient,注入的实现类就是RibbonLoadBalancerClient，而</p><p>@ConditionalOnMissingBean({LoadBalancerClient.class})</p><p>是有机会替换loadBalancer的。</p><p>那现在我们再看rule是怎么初始化的。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/538f1e4af8274aa9a9f999d318d9997c~tplv-k3u1fbpfcp-zoom-1.image"></p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b4211aff4c664b6f9995a783f38ed21e~tplv-k3u1fbpfcp-zoom-1.image"></p><p>而RibbonLoadBalancerClient里面的ILoadBalancer也是可以配置的</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d9bec45f59194aeebd55831b4697173a~tplv-k3u1fbpfcp-zoom-1.image"></p><p>通过在gateway里配置properties文件，即可指定自定义的ILoadBalancer和IRule</p><p>现在我们回顾一下调用流程，发现有2个丧心病狂的地方：</p><ol><li> LoadBalancerClientFilter</li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">protected</span> <span class="token class-name">ServiceInstance</span> <span class="token function">choose</span><span class="token punctuation">(</span><span class="token class-name">ServerWebExchange</span> exchange<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>loadBalancer<span class="token punctuation">.</span><span class="token function">choose</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>URI<span class="token punctuation">)</span>exchange<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token class-name">ServerWebExchangeUtils</span><span class="token punctuation">.</span>GATEWAY_REQUEST_URL_ATTR<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>这里丢失了exchange,只有serviceId的信息即：</p><p>((URI)exchange.getAttribute(ServerWebExchangeUtils.GATEWAY_REQUEST_URL_ATTR)).getHost()</p><p>2.RibbonLoadBalancerClient</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token class-name">ServiceInstance</span> <span class="token function">choose</span><span class="token punctuation">(</span><span class="token class-name">String</span> serviceId<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">choose</span><span class="token punctuation">(</span>serviceId<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">)</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token class-name">ServiceInstance</span> <span class="token function">choose</span><span class="token punctuation">(</span><span class="token class-name">String</span> serviceId<span class="token punctuation">,</span> <span class="token class-name">Object</span> hint<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Server</span> server <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getServer</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getLoadBalancer</span><span class="token punctuation">(</span>serviceId<span class="token punctuation">)</span><span class="token punctuation">,</span> hint<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> server <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">RibbonLoadBalancerClient<span class="token punctuation">.</span>RibbonServer</span><span class="token punctuation">(</span>serviceId<span class="token punctuation">,</span> server<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSecure</span><span class="token punctuation">(</span>server<span class="token punctuation">,</span> serviceId<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">serverIntrospector</span><span class="token punctuation">(</span>serviceId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMetadata</span><span class="token punctuation">(</span>server<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里直接传了个null</p><p>丢失了request的信息，又key默认值”default”</p><p>所以我们如果想要实现，必须重写LoadBalancerClientFilter的protected ServiceInstance choose(ServerWebExchange exchange)</p><p>而ILoadBalancer其实不需要自定义，只需要自定义IRule即可</p><p>代码如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * @author wangdengwu */</span><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SameIpBalanceRule</span> <span class="token keyword">extends</span> <span class="token class-name">ClientConfigEnabledRoundRobinRule</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">SameIpBalanceRule</span><span class="token punctuation">(</span><span class="token class-name">ILoadBalancer</span> lb<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setLoadBalancer</span><span class="token punctuation">(</span>lb<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">SameIpBalanceRule</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">initWithNiwsConfig</span><span class="token punctuation">(</span><span class="token class-name">IClientConfig</span> iClientConfig<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">Server</span> <span class="token function">choose</span><span class="token punctuation">(</span><span class="token class-name">Object</span> ip<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"client ip:&#123;&#125;"</span><span class="token punctuation">,</span> ip<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Server</span><span class="token punctuation">></span></span> servers <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getLoadBalancer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getReachableServers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>servers<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>servers<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> servers<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token function">sameIpChoose</span><span class="token punctuation">(</span>servers<span class="token punctuation">,</span> ip<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token class-name">Server</span> <span class="token function">sameIpChoose</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Server</span><span class="token punctuation">></span></span> servers<span class="token punctuation">,</span> <span class="token class-name">Object</span> ip<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> servers<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Server</span> server <span class="token operator">=</span> servers<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> host <span class="token operator">=</span> server<span class="token punctuation">.</span><span class="token function">getHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">CharSequence</span><span class="token punctuation">)</span> ip<span class="token punctuation">,</span> host<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> server<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">choose</span><span class="token punctuation">(</span>ip<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * @author wangdengwu */</span><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SameIpLoadBalancerClientFilter</span> <span class="token keyword">extends</span> <span class="token class-name">LoadBalancerClientFilter</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"$&#123;xxx.same.ip.enable&#125;"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">Boolean</span> enableSameIp <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">SameIpLoadBalancerClientFilter</span><span class="token punctuation">(</span><span class="token class-name">LoadBalancerClient</span> loadBalancer<span class="token punctuation">,</span> <span class="token class-name">LoadBalancerProperties</span> properties<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">(</span>loadBalancer<span class="token punctuation">,</span> properties<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token class-name">ServiceInstance</span> <span class="token function">choose</span><span class="token punctuation">(</span><span class="token class-name">ServerWebExchange</span> exchange<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//是否开启same ip策略</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>enableSameIp<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">choose</span><span class="token punctuation">(</span>exchange<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//获取浏览器访问者IP</span>        <span class="token class-name">String</span> ip <span class="token operator">=</span> <span class="token function">getRealIp</span><span class="token punctuation">(</span>exchange<span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> serviceIp <span class="token operator">=</span> exchange<span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFirst</span><span class="token punctuation">(</span><span class="token string">"serviceIp"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//强制指定IP优先级最高</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>serviceIp <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            ip <span class="token operator">=</span> serviceIp<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>loadBalancer <span class="token keyword">instanceof</span> <span class="token class-name">RibbonLoadBalancerClient</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">RibbonLoadBalancerClient</span> client <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">RibbonLoadBalancerClient</span><span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span>loadBalancer<span class="token punctuation">;</span>            <span class="token class-name">String</span> serviceId <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>URI<span class="token punctuation">)</span> exchange<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span>GATEWAY_REQUEST_URL_ATTR<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//这里使用ip做为选择服务实例的key</span>            <span class="token keyword">return</span> client<span class="token punctuation">.</span><span class="token function">choose</span><span class="token punctuation">(</span>serviceId<span class="token punctuation">,</span> ip<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">choose</span><span class="token punctuation">(</span>exchange<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">getRealIp</span><span class="token punctuation">(</span><span class="token class-name">ServerHttpRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 这个一般是Nginx反向代理设置的参数</span>        <span class="token class-name">String</span> ip <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFirst</span><span class="token punctuation">(</span><span class="token string">"X-Real-IP"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>ip <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> ip<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token string">"unknown"</span><span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span>ip<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            ip <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFirst</span><span class="token punctuation">(</span><span class="token string">"X-Forwarded-For"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>ip <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> ip<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token string">"unknown"</span><span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span>ip<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            ip <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFirst</span><span class="token punctuation">(</span><span class="token string">"Proxy-Client-IP"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>ip <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> ip<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token string">"unknown"</span><span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span>ip<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            ip <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFirst</span><span class="token punctuation">(</span><span class="token string">"WL-Proxy-Client-IP"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>ip <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> ip<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token string">"unknown"</span><span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span>ip<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            ip <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getRemoteAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHostAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 处理多IP的情况（只取第一个IP）</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>ip <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> ip<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ipArray <span class="token operator">=</span> ip<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            ip <span class="token operator">=</span> ipArray<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> ip<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>至此，代码完成了需求。</p><p>这里只是gateway实现了自定义路由的功能，其实还有一个地方遗漏了，那就是服务之间使用@FeignClient调用的时候，这块如何实现同源IP功能，就留给你去思考了。</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring gateway </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>领域驱动设计简介</title>
      <link href="/2021/10/26/ling-yu-qu-dong-she-ji-jian-jie/"/>
      <url>/2021/10/26/ling-yu-qu-dong-she-ji-jian-jie/</url>
      
        <content type="html"><![CDATA[<h1 id="领域驱动设计"><a href="#领域驱动设计" class="headerlink" title="领域驱动设计"></a>领域驱动设计</h1><h3 id="代码开发的思考"><a href="#代码开发的思考" class="headerlink" title="代码开发的思考"></a>代码开发的思考</h3><p>以下开发方法区别是什么？</p><ul><li>面向过程开发</li><li>面向对象开发</li><li>面向CV(ctrl-c&amp;ctrl-v)开发</li><li>面向百度开发</li><li>面向数据库开发</li></ul><h3 id="什么是技术债"><a href="#什么是技术债" class="headerlink" title="什么是技术债"></a>什么是技术债</h3><p>技术债就像技术前进中的累赘一样，会像滚雪球那样越滚越大，不断拖延增加新功能的步伐，最终可能无法再为系统添加新功能。因此，技术负债的存在是导致软件质量下降的重要原因。软件质量下降以后，系统难以维护和修复，就会导致项目失败或者必须重写代码</p><h3 id="你真的在面向对象开发吗？"><a href="#你真的在面向对象开发吗？" class="headerlink" title="你真的在面向对象开发吗？"></a>你真的在面向对象开发吗？</h3><ul><li>JavaBean它真的好用吗？</li><li>DTO为什么无处不在？</li><li>MVC思想的滥用</li><li>用着面向对象的语言，做着面向过程的开发<br>现在大部分对业务逻辑的处理，都是通过Controller到Service，再通过Dao组装操作到持久层数据库，而这其实是典型的面向过程的开发，中间只是数据的传递和组装修改。<br>而现在流行的微服务架构，如果不能很好的拆分出领域实体，确定好领域边界，只不过是增加了复杂度的单体应用而已。<br>领域驱动设计的思想，回归到面向对象的本质，封装，抽象上面来，虽然设计模式可以解决一部分场景问题，但是领域驱动设计更像<strong>重剑无锋，大巧不工</strong>。</li></ul><h3 id="领域驱动为什么没有流行起来"><a href="#领域驱动为什么没有流行起来" class="headerlink" title="领域驱动为什么没有流行起来"></a>领域驱动为什么没有流行起来</h3><p>我个人结合对领域驱动的理解和认识之后，总结为领域驱动早期引入的时候，翻译的名词太理论化，导致太抽象不接地气，下面我们就看看这些专有名词有多不接地气。</p><h3 id="领域驱动名词概念"><a href="#领域驱动名词概念" class="headerlink" title="领域驱动名词概念"></a>领域驱动名词概念</h3><p>主要的概念如下：</p><ul><li>有界上下文</li><li>领域事件</li><li>聚合</li><li>聚合根</li><li>实体</li><li>值对象</li></ul><h3 id="事件风暴"><a href="#事件风暴" class="headerlink" title="事件风暴"></a>事件风暴</h3><p>事件风暴是领域驱动很好的介入点，说人话就是需求讨论阶段，具体领域驱动这块的最佳实践就是需求讨论从事件入手，所谓事件就是业务内的动词，事件风暴从动词事件入手，虽然很繁琐，但是这些事件正是日后需要实现的功能激发的。事件离需求功能更接近，对领域事件进行分门别类，可以发现有界上下文和聚合。有界上下文就是指不同业务之间的边界，包括可能的数据传递和交互，而聚合是指业务的核心内容是什么。<br>DDD分析方法的核心：从细节动词入手发现有界上下文和聚合，以逻辑一致性为边界划分依据，对动作实现分门别类地划分。</p><h3 id="领域事件"><a href="#领域事件" class="headerlink" title="领域事件"></a>领域事件</h3><p>为什么是动作或事件？因为行为即类的方法，以方法聚合，即基于接口编程，才是高内聚松耦合的关键，又根据封装的特性，应该只暴露方法，而不应该暴露数据。所以，解决复杂性的两种方法是：拆解成松耦合的组件+使用容易让人明白的套路表达出来。<br>DDD是怎么实现这两种方法的呢？首先，DDD通过引入“领域或子域”以及“有界上下文”来划分边界，边界一旦划分好，拆解的第一步就能完成；其次，DDD引入各种模式名词，比如聚合、实体、值对象、工厂、仓储、领域事件，让知晓这些模式的人能够一下子定位到功能对应的组件。</p><h3 id="举个栗子"><a href="#举个栗子" class="headerlink" title="举个栗子"></a>举个栗子</h3><p>下面以某电力公司的电费结算领域为案例，说明如何通过组织的形式进行有界上下文的边界发现和划分。<br>首先需要了解一下领域知识、业务策略或业务规则。电力公司是干什么的? 它是电力这个商品的批发商，从发电企业购买电力，通过电网输送到用电用户，再向用电用户收取电费。其商业模式很简单，它的信息系统主要是管理金钱的进出，在上下游差价和巨额资金截流中赚取利润，这应该是其核心业务策略。<br>该业务策略落实到业务流程，就体现在部门组织设置上。营销部负责面向供电用户销售电力和收取电费，交易中心负责向电厂集中购电，财务部门则是对购销双方进行统一资金结算。不同部门负责不同的领域，现在可以根据这种原则划分三种有界上下文∶ 购电上下文;销电上下文和结算上下文，同时将参与开发的团队也相应地划分成三个团队。</p><h3 id="子域"><a href="#子域" class="headerlink" title="子域"></a>子域</h3><ul><li>核心子域(核心业务）</li><li>支持子域(周边可以外包的业务)</li><li>通用子域(基础支持如财务系统可以购买的系统)</li></ul><h3 id="聚合"><a href="#聚合" class="headerlink" title="聚合"></a>聚合</h3><p><strong>聚合是子域内的类集合以及类关系集合。</strong><br><strong>聚合是一个行为在逻辑上高度一致的对象群。</strong><br>注意，它是一个对象群体的总称。聚合的内部结构如同一棵树，每个聚合都有一个根，其他对象和聚合根之间都是枝叶与树根的有序关系。<br><strong>有序的复杂，虽然也复杂，但是可以被理解，无序的复杂，不仅仅复杂，最重要的是不能被轻易理解。</strong><br>这样有序化的好处是∶只有”根”能引用或指向其他对象，”根”自身不能被其他任何对象引用;”根”类似团队的小组长，队员都要向其汇报工作。这就是聚合根的设计来源，聚合根拥有自己边界内的数据所有权，以及行为职责的管理权限。<br>数据和行为两者兼顾的所有权只有聚合才能具有，为什么需要数据和行为两者兼顾呢?通常情况下，数据和行为是分离的，行为在服务中实现，而数据隔离在数据表中，行为通过服务转为SQL语句去操作数据表，这种方式的问题是隔离了行为和数据的紧密逻辑关系。<br>找出聚合和组合关联的类，组成树状类图，舍弃普通关联，这就是高内聚低关联的设计原则。<br><strong>聚合是体现逻辑一致性的地方，也是保证业务规则实现的地方。</strong></p><h3 id="失血和充血"><a href="#失血和充血" class="headerlink" title="失血和充血"></a>失血和充血</h3><p>在没有设计的朴素情况下，领域模型一般是一个数据对象（DTO等），其中只有setter/getter方法，是一种纯粹的数据结构，然后将很多数据结构的算法操作设计在服务（Service）等专门的接口类中。这样，数据对象作为服务接口方法的参数传入，在服务的方法中被加工。<br>所以说如果没有领域驱动设计的思想，即便是架构上是微服务的，服务内部也可能是只是面向过程的开发，只不过是service组装修改DTO，最终持久化而已。<br>区分开失血模型和贫血模型，有助于认识到数据库中的实体表其实是一种失血模型、一种纯数据结构;通过ORM等工具映射到Javabean，也是一种只有setter/ getter的失血模型，这些实体模型并不是 DDD中的实体。下面看看DDD中的实体是什么。</p><h3 id="实体"><a href="#实体" class="headerlink" title="实体"></a>实体</h3><p><strong>具有唯一标识的聚合即实体</strong><br>能够将复杂事情简单化，但是实体和聚合的表现形式太相似了。其实这是从两个不同角度看问题的结果，聚合是从实体外部看实体的上下文环境，需要在这个场景上下文扮演的角色来定位，而实体本身的内部设计，包括标识和其他属性、职责以及关联属于事物内部的构造设计。实体的设计不只要照顾到所处上下文，还要兼顾它被创建后的生命周期管理，实体的类名负责它在上下文中的定位，而实体的标识负责它被创建后的生命。<br>实体的构建往往需要builder模式<br>思考题：为什么需要使用builder模式？</p><h3 id="值对象"><a href="#值对象" class="headerlink" title="值对象"></a>值对象</h3><p>值对象：没有唯一标识的对象，是一堆数据值的容器。如VO对象，具有不变性<br>首先，值对象中的数据值一旦被构建，就不能改变，这是不变性的特性，而 DTO没有这种约束，这容易导致DTO传输过程中不断添加、修改各种字段。 DTO变成一个装载数据的可变长度的容器，虽然给编程带来了方便，但是将可变性带到代码的各个地方，最后DTO进数据库存储时，才发现数据并不是原来想象的那样，至于在哪个环节修改了，就需要不断地跟踪，这种跟踪在复杂软件中也非常复杂。</p>]]></content>
      
      
      <categories>
          
          <category> 程序设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DDD </tag>
            
            <tag> 领域驱动 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用selenium4监听网络请求</title>
      <link href="/2021/10/26/shi-yong-selenium4-jian-ting-wang-luo-qing-qiu/"/>
      <url>/2021/10/26/shi-yong-selenium4-jian-ting-wang-luo-qing-qiu/</url>
      
        <content type="html"><![CDATA[<h3 id="selenium4支持devTools"><a href="#selenium4支持devTools" class="headerlink" title="selenium4支持devTools"></a>selenium4支持devTools</h3><p>以往selenium更多的是用来作为UI自动化工具，因为其可以编程获取页面元素，并交互，而爬取数据往往因为页面元素的展示，和实际网络请求并不一致导致只是通过页面无法获取到精确数据。<br>现在selenium4则提供了devTools交互，Chrome等浏览器自身携带了devTools，以方便开发者调试页面，比较常用的就是查看页面元素，以及查看对应的网络请求数据。<br>浏览器自带的devTools如下所示</p><p><img src="https://cdn.jsdelivr.net/gh/wangdengwu/wangdengwu.github.io/source/_posts/assets/16352486276926.jpg"></p><h3 id="selenium环境搭建"><a href="#selenium环境搭建" class="headerlink" title="selenium环境搭建"></a>selenium环境搭建</h3><p>我们以Chrome为例搭建selenium环境<br>首先需要确定我们的Chrome浏览器的版本，如果你没有安装，则需要先安装Chrome浏览器，比如现在最新的Chrome浏览器版本为94.0.4606.81<br>另外下载对应版本的chromedriver,<a href="http://npm.taobao.org/mirrors/chromedriver/">下载地址(taobao镜像)</a> 选择和Chrome版本一致的文件夹，并下载和自己操作系统一致的文件。<br>下载完成后，需要把chromedriver放到系统可执行路径下，比如Linux或Mac可以放到/usr/local/bin/<br>然后通过命令行启动Chrome，对于Windows可以在桌面Chrome应用的快捷方式添加启动参数。启动命令如下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./Google<span class="token punctuation">\</span> Chrome --remote-debugging-port<span class="token operator">=</span><span class="token number">9222</span> --user-data-dir<span class="token operator">=</span><span class="token string">"/Users/xxxx/chrome2"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>其中最主要的2个参数是–remote-debugging-port和–user-data-dir</p><h3 id="程序调用"><a href="#程序调用" class="headerlink" title="程序调用"></a>程序调用</h3><p>当我们启动好Chrome之后，就可以通过代码的方式来进行交互了。<br>这里我使用Java语言来展示关键代码，对应pom里需要使用最新的selenium依赖</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">></span></span>    <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">></span></span>org<span class="token punctuation">.</span>seleniumhq<span class="token punctuation">.</span>selenium<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>    <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">></span></span>selenium<span class="token operator">-</span>java<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>    <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">></span></span><span class="token number">4.0</span><span class="token number">.0</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="配置启动参数"><a href="#配置启动参数" class="headerlink" title="配置启动参数"></a>配置启动参数</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">ChromeOptions</span> chromeOptions <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ChromeOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>chromeOptions<span class="token punctuation">.</span><span class="token function">setExperimentalOption</span><span class="token punctuation">(</span><span class="token string">"debuggerAddress"</span><span class="token punctuation">,</span> <span class="token string">"127.0.0.1:9222"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">WebDriver</span> driver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ChromeDriver</span><span class="token punctuation">(</span>chromeOptions<span class="token punctuation">)</span><span class="token punctuation">;</span>driver<span class="token punctuation">.</span><span class="token function">manage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">timeouts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">implicitlyWait</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token punctuation">.</span><span class="token function">ofSeconds</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>driver <span class="token operator">=</span> driver<span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>devTools <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ChromeDriver</span><span class="token punctuation">)</span> driver<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDevTools</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>devTools<span class="token punctuation">.</span><span class="token function">createSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>devTools<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token class-name">Network</span><span class="token punctuation">.</span><span class="token function">enable</span><span class="token punctuation">(</span><span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里初始化driver的时候，参数里的port一定要和启动Chrome时配置的port对应上。<br>而devTools则可以通过ChromeDriver直接获取到，devTools有很多api，而我们只演示监听网络数据的功能。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">devTools<span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token class-name">Network</span><span class="token punctuation">.</span><span class="token function">responseReceived</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>responseReceived <span class="token operator">-></span> <span class="token punctuation">&#123;</span>           <span class="token class-name">RequestId</span> requestId <span class="token operator">=</span> responseReceived<span class="token punctuation">.</span><span class="token function">getRequestId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token class-name">Network<span class="token punctuation">.</span>GetResponseBodyResponse</span> response <span class="token operator">=</span> devTools<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token class-name">Network</span><span class="token punctuation">.</span><span class="token function">getResponseBody</span><span class="token punctuation">(</span>requestId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token class-name">String</span> body <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>devTools是通过事件监听来获取网络数据的，具体监听事件有很多，比如responseReceived，requestWillBeSent，dataReceived等等。<br>需要注意的有几点：</p><ol><li>获取response的时候，记得try catch，以防止有的请求并没有body导致的异常。</li><li>responseReceived事件触发时，这个时候获取response未必能取到，因为只是响应返回了，但是body可能比较大，数据可能还没有接收完。</li><li>dataReceived事件触发时，大概率是可以获取到返回的body的，但是保险起见，可以sleep500毫秒。</li><li>如果有一些请求，请求的URL都一样，只是参数不同，而我们只关心特定参数的request返回的response，则可以订阅requestWillBeSent事件，确认该请求是需要的，则把RequestId扔到队列里，在dataReceived的时候从队列里取出RequestId来获取返回数据。</li><li>requestWillBeSent的RequestId和dataReceived的RequestId内容是一样的。</li></ol><p>除了通过devTools监听数据外，还可以做很多其它的事情，比如修改请求HEAD，修改Cookie，具体API可以去<a href="https://www.selenium.dev/documentation/webdriver/bidi_apis/">官网</a>查询。</p><p>当然有了driver一样可以像以前一样，访问URL，获取页面元素，交互。比如如下代码</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">driver<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>login<span class="token punctuation">)</span><span class="token punctuation">;</span>driver<span class="token punctuation">.</span><span class="token function">findElement</span><span class="token punctuation">(</span><span class="token class-name">By</span><span class="token punctuation">.</span><span class="token function">xpath</span><span class="token punctuation">(</span><span class="token string">"//*[@id=\"root\"]/div/section/header/div[1]/div/div/div/div[2]/span"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>driver<span class="token punctuation">.</span><span class="token function">findElement</span><span class="token punctuation">(</span><span class="token class-name">By</span><span class="token punctuation">.</span><span class="token function">className</span><span class="token punctuation">(</span><span class="token string">"semi-button-content"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>有了devTools监听网络数据，更方便爬取一些数据，尤其是需要授权登录的情况，我们可以事先登录或者远程登录的方式，来获取一些我们想要的数据。<br>以上就是对selenium4新功能devTools的介绍。</p>]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> selenium </tag>
            
            <tag> UI自动化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/10/22/hello-world/"/>
      <url>/2021/10/22/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Test </tag>
            
            <tag> First </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
